<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>блог берлинца со стажем on andron13</title><link>https://andron13.de/</link><description>Recent content in блог берлинца со стажем on andron13</description><generator>Hugo -- gohugo.io</generator><language>ru</language><lastBuildDate>Wed, 21 Jul 2021 09:49:14 +0200</lastBuildDate><atom:link href="https://andron13.de/index.xml" rel="self" type="application/rss+xml"/><item><title>Бесплатные уроки SQL online</title><link>https://andron13.de/school/database/01-sql-intro/</link><pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate><guid>https://andron13.de/school/database/01-sql-intro/</guid><description>SQL для начинающих # Кому необходимо знать SQl? # Администраторы баз данных (DBA) Бизнес аналитики Программист Тестировщик Проект-менеджеры Реализации SQL # Oracle SQL MySQL PostgreSQL MariaDB H2 Database Engine SQL Lite &amp;hellip;&amp;hellip;. PL SQL - Procedure Language # Tools: SQL Developer, sqlplus.
Install SQL # alter session set container = PDB1; alter user hr identified by hr account unlock; grant dba to hr; https://ru.</description></item><item><title>Введение в SEO для программистов</title><link>https://andron13.de/school/marketing/seo/001-seo-intro/</link><pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate><guid>https://andron13.de/school/marketing/seo/001-seo-intro/</guid><description>Современный бизнес полностью зависит от интернета. Самое позднее, во время локдауна 2020-го года это должны были понять даже те, кто в интернет особо не верил.
Бизнес в интернете полностью зависит от посещаемости вашей страницы. На сленге интернет-маркетологов посещаемость называют трафиком. Трафик можно получить раздавая визитки у метро, приглашая всех друзей в одноклассниках или фейсбуке, пользуясь рекламой у блогеров в инстаграме или телеграме, заказывая рекламу в Яндекс Директе или Google Adwords, из результатов поиска пользователей Google, Bing, Yandex.</description></item><item><title/><link>https://andron13.de/school/devops/01-dev-introduction/</link><pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate><guid>https://andron13.de/school/devops/01-dev-introduction/</guid><description>Я начал писать конспекты к лекциям по программированию всего-то около пяти лет назад. Наука давалась мне совсем нелегко. И записи в итоге очень помогли мне во время подготовки к экзаменам.</description></item><item><title>Бесплатные уроки Java online. 01 - Установка JDK и рабочего окружения</title><link>https://andron13.de/school/java/basic-course/001-java-setup/</link><pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/001-java-setup/</guid><description>HelloWorld.java — первая программа на Java — введение в Java 001 # Короткая инструкция, для тех кто нетерпелив # Для работы с Java в моём курсе нам понадобится:
JDK - Java Development Kit. Без этого Java-код на компьютере не запускается. IntelliJ IDEA Community Edition. Та программа, в которой я пишу код. Подробности в длинной инструкции.
Установка JDK # В интернете существуют тысячи инструкций по установке рабочего окружения для работы в Java.</description></item><item><title>Многомерные массивы в Java, Java для начинающих</title><link>https://andron13.de/school/java/basic-course/021-java-multi-dimensional-array/</link><pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/021-java-multi-dimensional-array/</guid><description>Многомерные массивы в Java — введение в Java 021 # Давайте повторим, что такое массив
Массив # Массив — это совокупность однотипных переменных, для обращения к которым используется общее имя. Java допускает создание массивов любого типа, которые могут иметь одно или несколько измерений.
многомерный массив на примере февраля static void month() { int[][] monthCalendar; monthCalendar = new int[4][7]; for (int outer = 0; outer &amp;lt; monthCalendar.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/008-java-modulo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/008-java-modulo/</guid><description>Modulo — модуль деления, введение в Java 008 # Modulo — в специализированной литературе &amp;ldquo;modulo&amp;rdquo; называется оператором деления по модулю или взятием модуля деления. В Java обозначается знаком &amp;ldquo;процентов&amp;rdquo; - %.
Используется это в программировании, например для перевода десятичных чисел в двоичные. Не надо путать этот оператор с делением &amp;ldquo;/&amp;rdquo;. Замечу, что в Википедии на данный момент по запросу modulo выводится статья про &amp;ldquo;деление с остатком&amp;rdquo;. На мой взгляд это очень сильно дезориентирующие определение.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/009-java-arithmetic-operators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/009-java-arithmetic-operators/</guid><description>Операторы в Java — введение в Java 009 # Мы уже использовали многое в наших программах не задумываясь. Например знаками знакомыми нам из школьной математики: +, -, = и др.. Пришло время узнать весь список доступных в Java операторов и применение.
Заранее скажу, что для введения в Java достаточно понимать первые две таблицы - арифметические операторы и операторы сравнения.
Арифметические операторы - arithmetic operators # Оператор Пример использования Пояснение + a + b Сложение - a - b Вычитание (также унарный минус) * a * b Умножение / a / b Деление % a % b Деление по модулю ++ a++ Инкремент, а++ соответствует а = а + 1 &amp;ndash; a&amp;ndash; Декремент, а&amp;ndash; соответствует а = а - 1 += a += b Сложение с присваиванием Выражение a += b эквивалентно значению a = a + b.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/010-java-for/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/010-java-for/</guid><description>Цикл FOR — введение в Java 010 # петля Каждый день я встаю в шесть утра и иду на завод к восьми, в семь вечера я уже снова дома, смотрю кино по телевизору, курю с соседом на лестничной клетке и в одиннадцать уже иду спать. Утром вторника повторяется всё то же самое, и в среду, и в четверг, и в пятницу.
Всё это можно описать, например, с помощью блока if else.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/011-java-string-possibilities-and-more/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/011-java-string-possibilities-and-more/</guid><description>Возможности различных типов данных, литералов в Java — введение в Java 011 # В четвёртом уроке мы затронули преобразования одних типов данных в другие. Давайте для начала посмотрим, что именно мы тогда учили.
Явные и неявные преобразования # Значения, передаваемые переменным, можно привести в тот тип данных, которые переменная может принять. Вручную или автоматически, или явно и неявно.
преобразование типов данных Расширение типа (widening Casting), которое можно проследить на схеме с помощью стрелок, происходит автоматически.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/012-java-methods-void-return/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/012-java-methods-void-return/</guid><description>Методы в Java немного подробнее: возвратные и исполняющие — введение в Java 012 # Главный метод класса # public static void main(String[] args) Каждый раз пишем эту магическую строку, что бы запустить нашу программу. MAIN - обозначает точку входа в программу. Мы можем один раз написать этот метод в главном классе, например Main:
public class Main { public static void main(String[] args) { // просто тестирование } } Следующим методом мы можем написать метод сложения двух целых чисел.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/013-java-while-dowhile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/013-java-while-dowhile/</guid><description>Цикл While и Do While — введение в Java 013 # Это самая лёгкая глава. Потому что цикл while — родной брат цикла for.
Пример:
public class WhileWeAreYoung { public static void main(String[] args){ int i = 0; while(i &amp;lt; 10){ System.out.println(i); i++; } } } Изученный цикл for мы бы написали так:
public static void main(String[] args) { for (int i = 0; i &amp;lt; 10 ; i++){ System.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/014-java-scanner/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/014-java-scanner/</guid><description>Scanner — введение в Java 014 # Я хочу ввести немного магии в наши программы. Мы уже пользовались и пользуемся для вывода результатов командой System.out.println(). Возможность ввода данных через терминал в программу также существует.
import java.util.Scanner; public class WhileScanner { public static void main(String[] args) { Scanner input = new Scanner(System.in); int old; System.out.println(&amp;#34;Сколько тебе лет? &amp;#34;); old = input.nextInt(); while (old &amp;gt;= 18){ System.out.println(&amp;#34;Ты можешь купить на вечер что-то более крепкое, чем чай&amp;#34;); break; // выход из цикла } input.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/015-java-binary-and-decimal-issue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/015-java-binary-and-decimal-issue/</guid><description>Двоичная, десятичная, восьмеричная и прочие системы в Java и преобразования между ними — введение в Java 015 # символы майя Для усвоения этого урока достаточно знать циклы for (while, do-while), оператор выбора switch, условный оператор **if **, знание и уверенное пользование арифметическим оператором modulo.
Это один из лучших примеров, который показывает, что первоначально абсолютно неподъёмная задача при решении оказывается не такой уж и страшной.
Мы уже рассматривали во главе, которая знакомила нас с while как из десятичных чисел получить двоичные.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/016-java-ternary-operator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/016-java-ternary-operator/</guid><description>Тернарный оператор &amp;ldquo;?:&amp;rdquo; — введение в Java 016 # Выражение:
if (условие) { number = 10; } else { number = -10; } Можно заменить на
number = (условие) ? 10 : -10; То есть ?: укороченный условный оператор if, if-else из седьмого урока
переменная = (выражение) ? значение if true : значение if false public static void ternar(int schoolАttestat){ String resultAtHome = &amp;quot;&amp;quot;; resultAtHome = (schoolАttestat &amp;gt;= 3) ?</description></item><item><title/><link>https://andron13.de/school/java/basic-course/017-java-recursion-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/017-java-recursion-intro/</guid><description>Рекурсивные методы в Java — введение в Java 017 # рекурсия экрана Многие из нас пытались сфотографировать себя в зеркале так, что бы в зеркале было снова изображение фотографирующего в зеркале и так до бесконечности. Это и есть частный случай рекурсии. В программировании это - метод, вызывающий(повторяющий) сам себя.
Рекурсия в программировании # Давайте попробуем найти факториал числа
public class Factorial{ static int calculateFactorial(int n){ int result = 1; for (int i = 1; i &amp;lt;=n; i ++){ result = result*i; } return result; } public static void main(String[] args){ System.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/018-java-array/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/018-java-array/</guid><description>Массивы в Java — введение в Java 018 # Давайте представим себе книжную полку на которой стоит множество книг. Или камеру хранения на вокзале со множеством ячеек. У каждой ячейки есть номер и в каждой из них может находиться чемодан.
Массив в реальной жизни - камера хранения В Java тоже есть похожие &amp;ldquo;книжные полки&amp;rdquo; или &amp;ldquo;камеры хранения&amp;rdquo;. Называются они массивами и в массиве мы можем хранить множество переменных одного типа.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/019-java-foreach/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/019-java-foreach/</guid><description>For-Each Loop — введение в Java 019 # Мы изучали цикл for, где в определённом диапазоне мы перебирали элементы. Существует брат уже изученного цикла - for each (фор ич). For each позволяет просмотреть все элементы массива не обращаясь к ним по индексу. Например:
public class Main { public static void main(String[] args) { int[] arr = new int[]{1, 2, 3, 4, 5, 6}; printArray(arr); } public static void printArray(int[] inputArray) { System.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/037-java-assert/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/037-java-assert/</guid><description>public class Test { public static void main(String[] args) { System.out.println(sum(1922222225, 1922222225)); } // Calculates the sum of a (int) + b (int) and returns the result (int). public static int sum(int a, int b) { assert (Integer.MAX_VALUE - a &amp;gt;= b) : &amp;#34;Value of &amp;#34; + a + &amp;#34; + &amp;#34; + b + &amp;#34; is too large to add.&amp;#34;; final int result = a + b; assert (result - a == b) : &amp;#34;Sum of &amp;#34; + a + &amp;#34; + &amp;#34; + b + &amp;#34; returned wrong sum &amp;#34; + result; return result; } } https://askdev.</description></item><item><title>01 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/01-basic/01-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/01-basic/01-exercises-html/</guid><description>Задачник для закрепления основ HTML. Здесь подобраны задачи на знание базовых тегов в HTML4 и HTML5.
Задача № 1 Exegi monumentum # Условие: создай html-файл (кодировка utf-8) с заголовком &amp;ldquo;Задача 1&amp;rdquo;, результат которого показан на изображении.
Используй подходящий тег заголовков (&amp;lt;h1&amp;gt; - &amp;lt;h6&amp;gt;), теги &amp;lt;br&amp;gt;, &amp;lt;p&amp;gt;, &amp;lt;i&amp;gt;, &amp;lt;em&amp;gt;, &amp;lt;strong&amp;gt;, &amp;lt;b&amp;gt; (необязательно все перечисленные). Выясните различие тегов &amp;lt;b&amp;gt; и &amp;lt;strong&amp;gt;, тегов &amp;lt;i&amp;gt; и &amp;lt;em&amp;gt;. В html-код добавьте комментарии: дату решения данной задачи и ФИО.</description></item><item><title>01 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/01-basic/15-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/01-basic/15-exercises-html/</guid><description>Задача № 15 Ссылки бывают разными # Условие: создай html-файл (кодировка utf-8) с заголовком &amp;ldquo;Задача 15&amp;rdquo;, результат которого показан на изображении.
Добавь две ссылки. Необычная ссылка должна открывать ссылку в новой вкладке. Обычная в том же окне.
Ссылки Ответы # Решите задачу и выложите ссылку на решение в комментариях. Воспользуйтесь сервисом git(preferred way) или сайтами cssdeck.com или jsfiddle.net.</description></item><item><title>01 - логика</title><link>https://andron13.de/school/java/exercises/01-exercises-java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/01-exercises-java/</guid><description>Задачи Java Boolean, введение — 01 # Большие проекты развивают кругозор. Маленькие задачи тренируют мастерство. Множественное повторение одного действия позволяет выполнять его на автоматизме не задумываясь. Решение задач помогает закрепить пройденный материал и поддерживать себя в форме.
Задачи на усвоение булевых значений в Java. Достаточно знать тип данных boolean, желательно(рекомендуется) знать условный оператор if-else.
Родители Васи Сидорова купили умный сейф и запрограммировали его на выдачу денег по отпечатку пальцев одного из родителей.</description></item><item><title>02 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/02-table/01-exercises-html-table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/02-table/01-exercises-html-table/</guid><description>Сборник задач на закрепление HTML-тега table и на вёрстку таблицами, как было принято во времена HTML4.
Задача № 1 таблица 15 x 15 # Нарисуй таблицу 15 на 15, как показано на рисунке. Это задача на html4.
Обрати внимание на вкладку браузера.
таблица 15 x 15 Создайте таблицу с данными.</description></item><item><title>02 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/02-table/02-exercises-html-table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/02-table/02-exercises-html-table/</guid><description>Задача № 2 Типичная таблица # Создайте таблицу с данными.
Типичная таблица</description></item><item><title>02 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/02-table/03-exercises-html-table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/02-table/03-exercises-html-table/</guid><description>Задача № 3 multicolored box # Попробуй реализовать таблицу не используя стилей
multicolored-box</description></item><item><title>02 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/02-table/04-exercises-html-table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/02-table/04-exercises-html-table/</guid><description>Сборник задач на закрепление HTML-тега table и на вёрстку таблицами, как было принято во времена HTML4.
Задача № 2 Макет для вёрстки # Сверстай страницу как на рисунке
макет для вёрстки</description></item><item><title>02 - Switch</title><link>https://andron13.de/school/java/exercises/02-exercises-java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/02-exercises-java/</guid><description>Закрепление материала, введение — 02 # методы и классы в Java простые типы данных Switch Задачи # 1. Диапазон # Даны два целых числа. Верните true, если одно из этих чисел находится в диапазоне от 10 до 20 включительно.
2. Степень числа # Возведите число n во вторую степень
digitPow(5) -&amp;gt; 25 digitPow(10) -&amp;gt; 100 digitPow(4) -&amp;gt; 16 3. getStringMonth # Написать метод String getStringMonth(int month),который принимает номер месяца, а возвращает название.</description></item><item><title>03 - If, else</title><link>https://andron13.de/school/java/exercises/03-exercises-java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/03-exercises-java/</guid><description>Задачи. If, if else введение - 03 # Требуется знание простых типов данных, String, if-else
Даны два целых числа, верните большее из двух. Если числа равны, то верните ноль. moreOrLess(5, 6) -&amp;gt; 6 moreOrLess(5, 5) -&amp;gt; 0 moreOrLess(0, 100) -&amp;gt; 100 Даны три целых числа, верните их сумму. Если первое и третье числа равны друг другу, то верните второе, если сумма равна нулю, то верните -1. mySum(5, 6, 5) -&amp;gt; 6 mySum(5, 6, 7) -&amp;gt; 18 mySum(0, 0, 0) -&amp;gt; 0 mySum(0, -5, 5) -&amp;gt; -1 Дан строковый литерал.</description></item><item><title>04 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/104-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/104-exercises-html/</guid><description>Сборник задач на закрепление изображений, видео и медиа, без css.</description></item><item><title>04 - повторение</title><link>https://andron13.de/school/java/exercises/04-exercises-java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/04-exercises-java/</guid><description>Задачи для повторения и закрепления — 04 # Напишите программу, которая выводит на экран результат деления двух чисел. 50/3. Ожидаемый результат :16 Напишите программу, которая выводит на экран результат следующих операций: -5 + 8 * 6 (55+9) % 9 Ожидаемый результат : 43 1 Напишите программу, которая выводит на экран значение переменной типа инт в квадрате (n * n). Предварительно обьявите эту переменную и задайте ее значение. Объявите 10 переменных типа int со значениями 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.</description></item><item><title>05 - цикл for</title><link>https://andron13.de/school/java/exercises/05-exercises-java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/05-exercises-java/</guid><description>Задачи. Цикл for, введение — 05 # Задачи на закрепление основ программирования. Требуется знание простых типов данных, String, switch, if-else, for
Закрепление изученного # 1. Счастливый пельмень # Существует такая традиция: при приготовлении пельменей в один из них кладут монетку на счастье. Считается, что тому, кому попадется пельмень с монеткой, улыбнется удача.
Представим, что у нас есть кастрюля, в которой лежит 10 пельменей. Один из них счастливый — а именно пятый пельмень.</description></item><item><title>06 - Nested Loops</title><link>https://andron13.de/school/java/exercises/06-exercises-java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/06-exercises-java/</guid><description>Вложенные циклы (Nested Loops) — 06 # 1. Прямоугольник # При вызове метода rectangle(5, 7); на экране появился прямоугольник. Что написано в методе rectangle?
******* ******* ******* ******* ******* 2. Трое неизвестных # нужно написать алгоритм вывода на экран всех возможных комбинаций 3-х натуральных чисел до 36 с определенными условиями:
необходимо использовать вложенные циклы x &amp;lt;= y &amp;lt;= z xyz = 36 например:
x=1, y=1, z=36 x=1; y=3; z=12 3.</description></item><item><title>06-html-form - основы</title><link>https://andron13.de/school/frontend/html/06-html-form/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/html/06-html-form/</guid><description>Формочки и формошлёпы # Один мой друг, а именно Геннадий Колтун с ib.by, называет фронтендщиков формошлёпами.
В чём то он определённо прав. Формы и формочки поджидают нас в интернете везде. Формы логина и регистрации на сайте, форма отправки емайлов, контактов, биллинга и всего чего только может быть.
Пример формы И мы шлёпаем эти формы всё время. И пожалуй это тот тег, который нам надо разобрать досконально.</description></item><item><title>07 - Modulo</title><link>https://andron13.de/school/java/exercises/07-exercises-java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/07-exercises-java/</guid><description>Двоичные системы счисления, Modulo — 07 # В одном KByte(килобайт) - 1000 Byte(10^3). В одном KiB(кикибайт) - 1024 Byte(2^10). Напишите программу, которая например из 100.000 байтов вычисляет сколько это целых KByte(килобайт) и оставшихся Byte. Напишите программу подсчёта (обмана) разницы маркетинговых гигабайт с гигабайтами. Сколько &amp;ldquo;программистских&amp;rdquo; или двоичных мебибайт в десятичных гигабайтах. Написать программу, которая нам переводит любое десятичное число в двоичное. Напишите программу для перевода из двоичных в десятичные.</description></item><item><title>09 - многомерные</title><link>https://andron13.de/school/java/exercises/09-exercises-java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/09-exercises-java/</guid><description>Многомерные массивы, введение — 09 # Перепишите метод monthCalendar используя метод цикл фор ич. Создать таблицу умножения(Пифагора) для младших классов. Таблица Пифагора Создать поле для игры в сапёров с типом данных на выбор. Например boolean со значениями false. Размером 100 на 100. И раставить 20 случайных бомб (true). Распечатайте координаты бомб. Создайте String массив случайного размера в диапазоне (10-100). Заполните его случайными строками(паролями?, логинами?, значениями?</description></item><item><title>10 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/01-basic/10-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/01-basic/10-exercises-html/</guid><description>Задача №10 Glossary of Terms # Исправьте ошибки в приведенном коде. Приведите код в HTML5
&amp;lt;!DOCTYPE HTML PUBLIC &amp;#34;-//W3C//DTD HTML 4.01 Transitional//EN&amp;#34; &amp;#34;http://www.w3.org/TR/html4/loose.dtd&amp;#34;&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Glossary&amp;lt;/title&amp;gt; &amp;lt;meta http-equiv=&amp;#34;content-type&amp;#34; content=&amp;#34;text/html; charset=utf-8&amp;#34;&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;a href=&amp;#34;glosstop.html&amp;#34;&amp;gt;&amp;lt;h1&amp;gt;&amp;lt;a href=&amp;#34;glosstop.html&amp;#34;&amp;gt;Glossary of Terms&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;span&amp;gt; &amp;lt;h2&amp;gt;&amp;lt;p&amp;gt;Algorithmic Oriented Language.&amp;lt;/h2&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt; &amp;lt;h2&amp;gt;&amp;lt;p&amp;gt;Creates new project&amp;lt;/p&amp;gt;&amp;lt;/h2&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; Ответы # Решите задачу и выложите ссылку на решение в комментариях. Воспользуйтесь сервисом git(preferred way) или сайтами cssdeck.com или jsfiddle.net.</description></item><item><title>10 - WarmUp</title><link>https://andron13.de/school/java/exercises/10-exercises-java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/10-exercises-java/</guid><description>Задачи на закрепления всех основных конструкций — 10 # The parameter weekday is true if it is a weekday, and the parameter vacation is true if we are on vacation. We sleep in if it is not a weekday or we&amp;rsquo;re on vacation. Return true if we sleep in. sleepIn(false, false) → true sleepIn(true, false) → false sleepIn(false, true) → true Given an int n, return the absolute difference between n and 21, except return double the absolute difference if n is over 21.</description></item><item><title>11 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/01-basic/11-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/01-basic/11-exercises-html/</guid><description>Задача №11 # Исправьте ошибки в приведенном коде. Приведите код в HTML5
&amp;lt;!DOCTYPE HTML PUBLIC &amp;#34;-//W3C//DTD HTML 4.01//EN&amp;#34;&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html; charset=utf-1&amp;#34;&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h11 align=&amp;#34;justify&amp;#34;&amp;gt;Галион&amp;lt;/h1&amp;gt; &amp;lt;p align=&amp;#34;justify&amp;#34;&amp;gt; &amp;lt;strong&amp;gt;Галион&amp;lt;/b&amp;gt; - большое трехмачтовое судно особо прочной постройки, снабженное тяжелой артиллерией.&amp;lt;/br&amp;gt; Эти суда служили для перевозки товаров и драгоценных металлов из испанских и португальских колоний в Европу.&amp;lt;/p&amp;gt; &amp;lt;hr&amp;gt; &amp;lt;blockquote&amp;gt;Флагманский корабль был мощным &amp;lt;i&amp;gt;галионом&amp;lt;/i&amp;gt;, вооруженным сорока восьмью большими пушками и восьмью малыми.</description></item><item><title>11 - Logic-1</title><link>https://andron13.de/school/java/exercises/11-exercises-java-logic-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/11-exercises-java-logic-01/</guid><description>Задачи на логику, на английском - уно # When squirrels get together for a party, they like to have cigars. A squirrel party is successful when the number of cigars is between 40 and 60, inclusive. Unless it is the weekend, in which case there is no upper bound on the number of cigars. Return true if the party with the given values is successful, or false otherwise. cigarParty(30, false) → false cigarParty(50, false) → true cigarParty(70, true) → true You are driving a little too fast, and a police officer stops you.</description></item><item><title>11-01 - Простой макет сайта</title><link>https://andron13.de/school/frontend/fe-exercises/11-moqups/01-exercises-web-sites-moqups/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/11-moqups/01-exercises-web-sites-moqups/</guid><description>Реализуй двух-колоночный дизайн, как можно ближе к макету.
Подбери бэкграунд и шрифты на своё усмотрение.
Если над фотографией проводят мышкой - она должна стать чёрно-белой.
создание сайта</description></item><item><title>12 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/01-basic/12-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/01-basic/12-exercises-html/</guid><description>Задача №12 Поломанная таблица # Исправьте ошибки в приведенном коде.
&amp;lt;!DOCTYPE HTML PUBLIC &amp;#34;-//W3C//DTD HTML 4.01//EN&amp;#34; &amp;#34;/TR/html4/strict.dtd&amp;#34;&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html; charset=utf-8&amp;#34;&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;table border=&amp;#34;0&amp;#34; celpadding=&amp;#34;0&amp;#34; celspacing=&amp;#34;0&amp;#34; border=&amp;#34;2&amp;#34;&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td valign=&amp;#34;top&amp;#34;&amp;gt;Ut aliquip ex ea commodo.&amp;lt;/td&amp;gt; &amp;lt;td valign=&amp;#34;top&amp;#34;&amp;gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit.&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;td valign=&amp;#34;botom&amp;#34; colspan=&amp;#34;2&amp;#34;&amp;gt;Lobortis nisl.&amp;lt;/td&amp;gt; &amp;lt;td valign=&amp;#34;top&amp;#34;&amp;gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit.&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/table&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; Ответы # Решите задачу и выложите ссылку на решение в комментариях.</description></item><item><title>12 - Logic-2</title><link>https://andron13.de/school/java/exercises/12-exercises-java-logic-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/12-exercises-java-logic-02/</guid><description>Задачи на логику - дос # We want to make a row of bricks that is goal inches long. We have a number of small bricks (1 inch each) and big bricks (5 inches each). Return true if it is possible to make the goal by choosing from the given bricks. This is a little harder than it looks and can be done without any loops. See also: Introduction to MakeBricks makeBricks(3, 1, 8) → true makeBricks(3, 1, 9) → false makeBricks(3, 2, 10) → true Given 3 int values, a b c, return their sum.</description></item><item><title>12 - карточки</title><link>https://andron13.de/school/frontend/fe-exercises/12-cards/01-exercises-cards/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/12-cards/01-exercises-cards/</guid><description> создание сайта создание сайта</description></item><item><title>13 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/01-basic/13-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/01-basic/13-exercises-html/</guid><description>Задача №13 Многочлен # Попробуйте реализовать.
Задача 13 Ответы # Решите задачу и выложите ссылку на решение в комментариях. Воспользуйтесь сервисом git(preferred way) или сайтами cssdeck.com или jsfiddle.net.</description></item><item><title>13 - String-1</title><link>https://andron13.de/school/java/exercises/13-exercises-java-string-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/13-exercises-java-string-01/</guid><description>Доброе утро, String - уно # Given a string name, e.g. &amp;ldquo;Bob&amp;rdquo;, return a greeting of the form &amp;ldquo;Hello Bob!&amp;rdquo;. helloName(&amp;quot;Bob&amp;quot;) → &amp;quot;Hello Bob!&amp;quot; helloName(&amp;quot;Alice&amp;quot;) → &amp;quot;Hello Alice!&amp;quot; helloName(&amp;quot;X&amp;quot;) → &amp;quot;Hello X!&amp;quot; Given an &amp;ldquo;out&amp;rdquo; string length 4, such as &amp;ldquo;&amp;laquo;&amp;raquo;&amp;rdquo;, and a word, return a new string where the word is in the middle of the out string, e.g. &amp;ldquo;&amp;laquo;word&amp;raquo;&amp;rdquo;. Note: use str.substring(i, j) to extract the String starting at index i and going up to but not including index j.</description></item><item><title>14 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/01-basic/14-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/01-basic/14-exercises-html/</guid><description>Задача №14 Ключевые слова # Попробуйте реализовать.
Задача 14 Ответы # Решите задачу и выложите ссылку на решение в комментариях. Воспользуйтесь сервисом git(preferred way) или сайтами cssdeck.com или jsfiddle.net.</description></item><item><title>14 - String-2</title><link>https://andron13.de/school/java/exercises/14-exercises-java-string-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/14-exercises-java-string-02/</guid><description>Доброе день, String - дос # Given a string, return a string where for every char in the original, there are two chars. doubleChar(&amp;quot;The&amp;quot;) → &amp;quot;TThhee&amp;quot; doubleChar(&amp;quot;AAbb&amp;quot;) → &amp;quot;AAAAbbbb&amp;quot; doubleChar(&amp;quot;Hi-There&amp;quot;) → &amp;quot;HHii--TThheerree&amp;quot; Return the number of times that the string &amp;ldquo;code&amp;rdquo; appears anywhere in the given string, except we&amp;rsquo;ll accept any letter for the &amp;rsquo;d', so &amp;ldquo;cope&amp;rdquo; and &amp;ldquo;cooe&amp;rdquo; count. countCode(&amp;quot;aaacodebbb&amp;quot;) → 1 countCode(&amp;quot;codexxcode&amp;quot;) → 2 countCode(&amp;quot;cozexxcope&amp;quot;) → 2 Return true if the given string contains a &amp;ldquo;bob&amp;rdquo; string, but where the middle &amp;lsquo;o&amp;rsquo; char can be any char.</description></item><item><title>15 - String-3</title><link>https://andron13.de/school/java/exercises/15-exercises-java-string-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/15-exercises-java-string-03/</guid><description>Добрый вечер, String - трес # Given a string, count the number of words ending in &amp;lsquo;y&amp;rsquo; or &amp;lsquo;z&amp;rsquo; &amp;ndash; so the &amp;lsquo;y&amp;rsquo; in &amp;ldquo;heavy&amp;rdquo; and the &amp;lsquo;z&amp;rsquo; in &amp;ldquo;fez&amp;rdquo; count, but not the &amp;lsquo;y&amp;rsquo; in &amp;ldquo;yellow&amp;rdquo; (not case sensitive). We&amp;rsquo;ll say that a y or z is at the end of a word if there is not an alphabetic letter immediately following it. (Note: Character.isLetter(char) tests if a char is an alphabetic letter.</description></item><item><title>16 - Рекурсия - 1</title><link>https://andron13.de/school/java/exercises/16-exercises-java-recursion-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/16-exercises-java-recursion-01/</guid><description>Задачи для курса Java-basic - рекурсия # Given n of 1 or more, return the factorial of n, which is n * (n-1) * (n-2) &amp;hellip; 1. Compute the result recursively (without loops).
Дано N большее либо равное 1. Вернуть факториал N = n * (n-1) * (n-2) &amp;hellip;. 1. Вычислить результат рекурсивно (без циклов). factorial(1) → 1 factorial(2) → 2 factorial(3) → 6 We have bunnies standing in a line, numbered 1, 2, &amp;hellip; The odd bunnies (1, 3, .</description></item><item><title>17 - Рекурсия -2</title><link>https://andron13.de/school/java/exercises/17-exercises-java-recursion-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/17-exercises-java-recursion-02/</guid><description>Задачи для курса Java-basic - рекурсия # Given an array of ints, is it possible to choose a group of some of the ints, such that the group sums to the given target? This is a classic backtracking recursion problem. Once you understand the recursive backtracking strategy in this problem, you can use the same pattern for many problems to search a space of choices. Rather than looking at the whole array, our convention is to consider the part of the array starting at index start and continuing to the end of the array.</description></item><item><title>18 - Array-1</title><link>https://andron13.de/school/java/exercises/18-exercises-java-arrays-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/18-exercises-java-arrays-01/</guid><description>Закрепление массивов, Java-Basic # Given an array of ints, return true if 6 appears as either the first or last element in the array. The array will be length 1 or more.
Дан массив int. Верните true, если цифра 6 является значением в первом или последнем элементе массива. Массив будет длиной больше, либо равной единице.
firstLast6([1, 2, 6]) → true firstLast6([6, 1, 2, 3]) → true firstLast6([13, 6, 1, 2, 3]) → false Given 2 arrays of ints, a and b, return true if they have the same first element or they have the same last element.</description></item><item><title>19 - Array-2</title><link>https://andron13.de/school/java/exercises/19-exercises-java-arrays-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/19-exercises-java-arrays-02/</guid><description>Закрепление массивов, Java-Basic, Array-2 # Return the number of even ints in the given array. Note: the % &amp;ldquo;mod&amp;rdquo; operator computes the remainder, e.g. 5 % 2 is 1. countEvens([2, 1, 2, 3, 4]) → 3 countEvens([2, 2, 0]) → 3 countEvens([1, 3, 5]) → 0 Return the sum of the numbers in the array, returning 0 for an empty array. Except the number 13 is very unlucky, so it does not count and numbers that come immediately after a 13 also do not count.</description></item><item><title>2</title><link>https://andron13.de/school/java/basic-course/002-java-integers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/002-java-integers/</guid><description>Простые типы данных — byte, short, int, long, в примерах — введение в Java 002 # Чтобы вызвать на экран что-то большее, чем &amp;ldquo;Привет, Мир!&amp;rdquo;, надо работать с числами, символами и буквами. Чтобы работать с ними в Java — надо научиться их хранить и передавать. Для этого нам надо познакомиться с понятием &amp;ldquo;типы данных&amp;rdquo;, а точнее &amp;ldquo;простые типы данных&amp;rdquo;.
Простые типы данных — Java Primitives # Существуют следующие базовые типы данных: byte, short, int, long, float, double, char, boolean и String (не совсем примитив, но базовый тип данных).</description></item><item><title>2 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/01-basic/02-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/01-basic/02-exercises-html/</guid><description>Задача № 2 Не позволяй душе лениться # Условие: создайте html-файл (кодировка utf-8) с заголовком &amp;ldquo;Задача 2&amp;rdquo;, результат которого показан на рисунке. Используйте подходящий тег заголовков (h1-h6), теги &amp;lt;br&amp;gt;, &amp;lt;p&amp;gt;, &amp;lt;i&amp;gt;, &amp;lt;em&amp;gt;, &amp;lt;strong&amp;gt;, &amp;lt;b&amp;gt;, &amp;lt;hr&amp;gt;, &amp;lt;small&amp;gt; (необязательно все перечисленные). Обратите внимание, что шрифт фамилии автора меньшего размера. Заметим, что тег &amp;lt;hr&amp;gt; в разных браузерах может отображаться по-разному. В html-код добавьте условие данной задачи в виде комментариев.
Задача 2 Assets # Не позволяй душе лениться!</description></item><item><title>20 - Array-3</title><link>https://andron13.de/school/java/exercises/20-exercises-java-arrays-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/20-exercises-java-arrays-03/</guid><description>Закрепление массивов, Java-Basic, Array-3 # Consider the leftmost and righmost appearances of some value in an array. We&amp;rsquo;ll say that the &amp;ldquo;span&amp;rdquo; is the number of elements between the two inclusive. A single value has a span of 1. Returns the largest span found in the given array. (Efficiency is not a priority.) maxSpan([1, 2, 1, 1, 3]) → 4 maxSpan([1, 4, 2, 1, 4, 1, 4]) → 6 maxSpan([1, 4, 2, 1, 4, 4, 4]) → 6 Given a non-empty array, return true if there is a place to split the array so that the sum of the numbers on one side is equal to the sum of the numbers on the other side.</description></item><item><title>20 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/20-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/20-exercises-html/</guid><description>Задача № 20 # http://htmlbook.ru/practical/flag-yaponii</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/01-basic/03-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/01-basic/03-exercises-html/</guid><description>Задача № 3 Молчание золото # Дана фотография, короткий заголовок. Создайте файл, как на примере.
Задача 3 Assets # Ссылка на изображение
Ответы # Решите задачу и выложите ссылку на решение в комментариях. Воспользуйтесь сервисом git(preferred way) или сайтами cssdeck.com или jsfiddle.net.</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/03-form/01-exercises-html-forms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/03-form/01-exercises-html-forms/</guid><description>Сборник задач на закрепление формуляров form и всех тегов, которые касаются формочек: input, label; а также атрибутов к ним. Без css, только сами теги в HTML
Задача № 1 # Реализуй форму. Обрати внимание на выбор по умолчанию.
Пимпочка</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/03-form/02-exercises-html-forms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/03-form/02-exercises-html-forms/</guid><description>Сборник задач на закрепление формуляров form и всех тегов, которые касаются формочек: input, label; а также атрибутов к ним. Без css, только сами теги в HTML
Задача № 2 # Реализуй форму.
таблица</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/03-form/03-exercises-html-forms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/03-form/03-exercises-html-forms/</guid><description>Сборник задач на закрепление формуляров form и всех тегов, которые касаются формочек: input, label; а также атрибутов к ним. Без css, только сами теги в HTML
Задача № 3 # Перепробуй все возможности инпутов.
Все(?) инпуты</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/03-form/04-exercises-html-forms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/03-form/04-exercises-html-forms/</guid><description>Задача № 4 Запись на курсы программирования # Реализуй форму. Обрати внимание на выбор по умолчанию.
Запись на курсы программирования</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/04-media/01-exercises-html-media/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/04-media/01-exercises-html-media/</guid><description>Задача №1 Берлин # Добавьте одну фотографию в html-файл Можно ли не используя стили сделать рамку у фотографии? Сделай.
Berlin</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/04-media/02-exercises-html-media/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/04-media/02-exercises-html-media/</guid><description>Задача №2 Берлин в кубе # Добавьте три фотографии в html-файл Можно ли не используя стили сделать рамку у фотографии? Сделай.
берлин Assets # Первое изображение Второе изображение Третье изображение</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/04-media/03-exercises-html-media/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/04-media/03-exercises-html-media/</guid><description>Задача № 3 Карта сокровищ # Условие: Создайте html-файл, результат которого показан на рисунке. Укажите на изображении ссылочные области: клад, акула, осьминог, корабль. При наведении курсора на ссылочную область должна появляться подсказка. Используйте тег для элемента под изображением, наглядно показывающем какая часть пути до клада пройдена.
Карта сокровищ Подсказка: area, shape, coords, progress
Assets # Исходники</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/04-media/04-exercises-html-media/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/04-media/04-exercises-html-media/</guid><description>Задача № 4 Видео с Youtube # Эта задача не так порой не так проста, как кажется.
Интегрируйте в HTML-файл видео с youtube.
вкусняшки Пример интеграции: # Assets # https://youtu.be/h4FppfXWn-o</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/04-media/05-exercises-html-media/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/04-media/05-exercises-html-media/</guid><description>Задача № 5 собственный видеофайл # Интегрируйте в HTML-файл видеофайл собственными силами
вкусняшки Assets # Исходники</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/04-media/06-exercises-html-media/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/04-media/06-exercises-html-media/</guid><description>Задача № 6 скачать аудиотрек # Интегрируйте в HTML-файл аудио-файл собственными силами
Audio player Assets # Скачать аудиофайл бесплатно, без смс и регистраций - здесь</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/04-media/07-exercises-html-media/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/04-media/07-exercises-html-media/</guid><description>Задача № 7 Карта сокровищ # Условие: Создайте html-файл, при наведении курсора на ссылочную область должна появляться подсказка. Области должны быть по возможности квадратными, там где на изображении квадрат, эллипс, если на изображении эллипс и окружность, где на изображении окружность.
Ссылки должны вести на существующие страницы.
Области для ссылок: ручки, блокнот, карандаши, ноут, кофе, мышка, телефон. В правом нижнем углу секретная ссылка на сайт andron13.de
Кофе и компьютер Assets # Исходники</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/04-media/08-exercises-html-media/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/04-media/08-exercises-html-media/</guid><description>Задача № 8 Котики # Котиков на фотографии зовут Твитер, Фейсбук, Инстаграм, Гугл и Яндекс. При клике на каждого из котиков пользователь должен попасть в новом окне на сайт соответствующего сервиса.
В правом нижнем углу секретная ссылка на сайт andron13.de
Котики Assets # Исходники</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/04-media/09-exercises-html-media/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/04-media/09-exercises-html-media/</guid><description>Задача № 9 Котики # Щенков на фотографии зовут Фронтенд, Бэкенд и Фулстек. При клике на каждого из котиков пользователь должен попасть в новом окне на сайт, который объясняет эти термины.
В правом нижнем углу секретная ссылка на сайт andron13.de
Щенки Assets # Исходники</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/05-css-intro/01-exercises-html-css-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/05-css-intro/01-exercises-html-css-intro/</guid><description>Задача №1 # Berlin</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/10-forms-with-css/01-exercises-html-css-user-login/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/10-forms-with-css/01-exercises-html-css-user-login/</guid><description>Логин пользователя # Я собрал несколько примеров реализаций и задумок пользовательских логинов в различных системах. Попробуй реализовать их.
Принципиально нельзя пользоваться никакими библиотеками и фреймворками. Помни, что реализовать каждый пример можно несколькими способами: блочная вёрстка и обтекание, флексмодель + гриды, табличная вёрстка + основы css(рекомендуется только тем, кто будет работать с очень старым кодом или с корпоративными рассылками). Можешь выбрать любой вариант или сделать всё в нескольких вариантах. По возможности, постарайся не перемешивать варианты вёрстки.</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/10-forms-with-css/02-exercises-html-css-contact-forms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/10-forms-with-css/02-exercises-html-css-contact-forms/</guid><description>Задача №1 # Berlin</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/10-forms-with-css/03-exercises-html-css-404-sites/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/10-forms-with-css/03-exercises-html-css-404-sites/</guid><description>Задача №1 # Berlin</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/10-forms-with-css/04-exercises-html-css-comment-forms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/10-forms-with-css/04-exercises-html-css-comment-forms/</guid><description>Задача №1 # Berlin</description></item><item><title>3 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/103-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/103-exercises-html/</guid><description>Сборник задач на закрепление формуляров form и всех тегов, которые касаются формочек: input, label; а также атрибутов к ним. Без css, только сами теги в HTML
Задача № 1 # Реализуй форму. Обрати внимание на выбор по умолчанию.
Пимпочка</description></item><item><title>4 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/01-basic/04-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/01-basic/04-exercises-html/</guid><description>Задача № 4 Структура проекта # Помогите правильно описать структуру проекта. В комментариях html файла укажите свою группу и ФИО.
В конце страницы сделайте регион подвал. И добавьте туда ссылку на эту задачу.
Задача 4 Помощь # Перечисления в HTML
Ответы # Решите задачу и выложите ссылку на решение в комментариях. Воспользуйтесь сервисом git(preferred way) или сайтами cssdeck.com или jsfiddle.net.</description></item><item><title>5 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/01-basic/05-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/01-basic/05-exercises-html/</guid><description>Задача № 5 Полезные ссылки # Помогите красиво оформить ссылки на полезные материалы. Постарайтесь найти ссылки на полезные статьи самостоятельно и используйте их в коде страницы.
В конце страницы сделайте регион подвал. И добавьте туда ссылку на эту задачу и на сайт школы.
Задача 5 Assets # Ссылка на изображение
Ответы # Решите задачу и выложите ссылку на решение в комментариях. Воспользуйтесь сервисом git(preferred way) или сайтами cssdeck.</description></item><item><title>5 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/105-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/105-exercises-html/</guid><description>Задачи на основы CSS и блочной вёрстки</description></item><item><title>6 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/01-basic/06-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/01-basic/06-exercises-html/</guid><description>Задача №6 Генераторы # Реализуйте макет.
Задача 6 Ответы # Решите задачу и выложите ссылку на решение в комментариях. Воспользуйтесь сервисом git(preferred way) или сайтами cssdeck.com или jsfiddle.net.</description></item><item><title>6 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/106-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/106-exercises-html/</guid><description>Задачи по HTML7 - position Задачи по HTML8 - псевдоэлементы и классы Задачи по HTML9 - flexbox Задачи по HTML10 - media query Задачи по HTML11 - CSS Animation Задачи по HTML12 - CSS Grid Задачи по HTML13 - CSS - реализация различных элементов Задачи по HTML14 - Набор дизайнов для вёрстки и практики Задачи по HTML15 - Набор дизайнов для вёрстки и практики
20 флаги разных стран мира</description></item><item><title>7 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/01-basic/07-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/01-basic/07-exercises-html/</guid><description>Задача №7 Сократ всегда прав # Создайте html-файл, результат которого показан на рисунке. Возможны несколько вариантов правильных решений. Используйте теги: &amp;lt;q&amp;gt;, &amp;lt;cite&amp;gt;, &amp;lt;blockquote&amp;gt;, &amp;lt;hr&amp;gt;, &amp;lt;header&amp;gt;, &amp;lt;footer&amp;gt;, &amp;lt;address&amp;gt;, &amp;lt;figure&amp;gt;, &amp;lt;figcaption&amp;gt;, &amp;lt;article&amp;gt;.
При вставке символа авторского права не используйте мнемоническую запись.
Задача 6 Assets # Ссылка на изображение
Ответы # Решите задачу и выложите ссылку на решение в комментариях. Воспользуйтесь сервисом git(preferred way) или сайтами cssdeck.</description></item><item><title>8 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/01-basic/08-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/01-basic/08-exercises-html/</guid><description>Задача №8 Редактирование текста # Создайте веб-страницу, используя теги del и ins.
Задача 8 Assets # Горизонтальный отступ от картинки до текста управляется параметром hspace, он добавляет пустое пространство одновременно слева и справа от изображения. Поэтому рисунок от края окна будет отстоять на значение, которое указано этим атрибутом по горизонтали выравнивается не строго по краю окна браузера, а отстоит от него на некотором расстоянии, которое равно значению hspace.</description></item><item><title>9 - html основы</title><link>https://andron13.de/school/frontend/fe-exercises/01-basic/09-exercises-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/01-basic/09-exercises-html/</guid><description>Задача №9 Шон Коннери # Используя спецсимволы оформите текст. Обратите внимание на кавычки и тире в тексте.
Задача 9 Assets # Сэр То́мас Шон Ко́ннери (англ. Thomas Sean Connery; 25 августа 1930, Фаунтинбридж — 31 октября 2020, Лайфорд-Кей) — шотландский актёр и кинопродюсер. Наиболее известен как первый актёр, сыгравший в кино британского секретного агента Джеймса Бонда, снялся в семи фильмах о Бонде (первые пять фильмов, от «Доктора Ноу» до «Живёшь только дважды», плюс «Бриллианты навсегда» и «Никогда не говори «никогда»») в период с 1962 по 1983 год.</description></item><item><title>CSS box model</title><link>https://andron13.de/school/frontend/css/04-css-box-model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/04-css-box-model/</guid><description>CSS box model - блочная или блоковая модель. # CSS box model описывает свойства влияющие на HTML - элемент и его размеры.
Согласно этой модели, бокс состоит из: content - содержимое блока. padding - внутренние отступы border - граница, рамка, бордюр элемента margin - внешние отступы
Мы стартуем с index.html
&amp;lt;p class=&amp;#34;box-one&amp;#34;&amp;gt;One&amp;lt;/p&amp;gt; &amp;lt;p class=&amp;#34;box-two&amp;#34;&amp;gt;Two&amp;lt;/p&amp;gt; И css
* { padding: 0; margin: 0; font-size: 40px; } .box-one { background-color: #eb5757; border: 0 solid #9b51e0; } .</description></item><item><title>CSS FONTS</title><link>https://andron13.de/school/frontend/css/02-css-fonts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/02-css-fonts/</guid><description>Красивый почерк ценился во все времена и у всех народов.
HTML не выбивается из опыта накопленного человечеством. Красивый шрифт на странице пожалуй самая важная часть сайта. Только надо понять что такое красивый шрифт.
Читаемость Масштабируемость Возможность &amp;ldquo;играть&amp;rdquo; шрифтами Доступность в кириллице и латинице Наличие на всех системах Системные шрифты # Добавить шрифты можно несколькими вариантами. Существуют стандартные шрифты, которые называются Web Safe Fonts.
Web Safe Fonts # Arial (sans-serif) Verdana (sans-serif) Helvetica (sans-serif) Tahoma (sans-serif) Trebuchet MS (sans-serif) Times New Roman (serif) Georgia (serif) Garamond (serif) Courier New (monospace) Brush Script MT (cursive) Web Safe Fonts с большой долей вероятности уе предустановлены на операционной системе и используются в браузере вашего пользователя.</description></item><item><title>display none</title><link>https://andron13.de/school/frontend/css/03-css-layout-display/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/03-css-layout-display/</guid><description>В данной статье приведены примеры для технического ознакомления. Я категорически не рекомендую использовать эти советы при попытке &amp;ldquo;переиграть&amp;rdquo; поисковые алгоритмы. Компьютеры уже многие годы выигрывают людей в шахматы. Не думайте, что вы сможете переиграть Яндекс, Бинг или Гугл в 2021-ом году.
Чёрное СЕО # Наши пылесосы, самые пылесосные пылесосы среди всех пылесосящих пылесосов в мире.
Чем больше слово пылесос встречается на странице, тем выше поисковик поднимет страницу с пылесосами в поиске, и тем больше пылесосов я смогу продать клиентам.</description></item><item><title>Emmet</title><link>https://andron13.de/school/frontend/html/15-emmet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/html/15-emmet/</guid><description>Emmet и HTML # Emmet — это слово, которое первоначально означало муравей. Это то самое маленькое насекомое, способное переносить груз в 50 раз больше собственного веса. Это слово также похоже на &amp;ldquo;emit&amp;rdquo;, что, по сути, и делает Emmet, когда расширяет аббревиатуры.
То есть emmet набор сокращений и горячих клавиш, которые помогают в повседневной работе фронтендеру.
Появился Emmet в 2008-м году под названием Zen Coding. Zen Coding ускорял написание кода HTML, XML, XSL, а также код на некоторых других языках.</description></item><item><title>Flexible Box</title><link>https://andron13.de/school/frontend/css/08-css-flex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/08-css-flex/</guid><description>Флексбокс - flexbox # Двуосная модель расположения элементов # В CSS модели раскладки Flexible Box используются двуосная модель расположения. Главная ось - Main Axis и ось перпендикулярная ей - Cross Axis
Пример # &amp;lt;div class=&amp;#34;wrapper&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;row&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;item&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;item&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;item&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; * { margin: 0; padding: 0; box-sizing: border-box; } .wrapper { width: 1000px; margin: 0 auto; } .item { height: 100px; background-color: #333; border: 1px solid red; padding: 15px; color: #fff; } Получили 3 прямоугольника.</description></item><item><title>float</title><link>https://andron13.de/school/frontend/css/06-css-float/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/06-css-float/</guid><description>Практика с флоат
Практика с флоат https://github.com/tel-ran-de/16m-FE/tree/lesson-05/float Практика с флоат https://github.com/tel-ran-de/16m-FE/tree/lesson-05/newProject-5_5</description></item><item><title>float</title><link>https://andron13.de/school/frontend/css/07-css-layout-position/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/07-css-layout-position/</guid><description>Возможные значения position # static relative absolute fixed sticky Свойство position не наследуется, так что для дочерних элементов его требуется указывать явно.
Свойство z-index работает только для элементов, у которых position задано как relative, absolute или fixed.
Нормальное позиционирование: static # Нормальное (статичное) позиционирование - это обычное поведение блочных элементов в том порядке, в котором они прописаны в коде сверху вниз. Его не нужно прописывать, потому что оно стоит по умолчанию.</description></item><item><title>Grid</title><link>https://andron13.de/school/frontend/css/09-css-grid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/09-css-grid/</guid><description>Вот мы и дошли до модальной сетки или как их называют в народе — гриды. Прежде чем написать эту статью я отсмотрел около 10 часов различных курсов и видеороликов на трёх языках от самых различных преподавателей на Youtube, Coursera и Udemy. Таких как Jonas Schmedtmann или Wes Bos. Эти двое, пожалуй, топ всех преподов онлайн. И я рекомендую посмотреть их материалы, мне они очень помогли.
Возможно лучше сразу учиться у лучших :).</description></item><item><title>MediaQueries для различных экранов</title><link>https://andron13.de/school/frontend/css/11-css-media-queries-print-version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/11-css-media-queries-print-version/</guid><description>Медиазапросы и принт-версия вебстраницы # Давайте поговорим о рецептах. Я поддерживаю один сайт с кулинарными рецептами. И на нём я в первый раз решал интересную и полезную задачу. И так. Представим, что ты пользователь, который ищет условный рецепт на ужин. Например &amp;ldquo;рецепт драников по-могилёвски&amp;rdquo;.
Пошаговый usercase для сайта рецептов # Вбить в гугл поисковый запрос. Найти или выбрать в выдаче сайт с подходящим, привлекательным рецептом. Распечатать его на принтере В процессе обсуждения, усложнения или упрощения поведения пользователя мы можем прийти к тому, что страница с рецептом в браузере может очень существенно отличаться от желаемой странице распечатанной на листе А4.</description></item><item><title>MediaQueries для различных экранов</title><link>https://andron13.de/school/frontend/css/12-css-media-queries-screens/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/12-css-media-queries-screens/</guid><description>Фиксированный, резиновый, адаптивный дизайны, Meta-Viewport # Прежде чем продолжить тему с медиазапросами давайте обсудим типы диазайнов и их развитие.
Фиксированный дизайн # Раньше, во времена царя Гороха все сайты в 99% слуачаях смотрелись на мониторах с разрешением 640 на 480. Потом появились 800 на 600. Техника не стояла на месте и крутые, дорогие мониторы смогли отображать сайты с разрешением 1024×768.
Первая величина ширина экрана, вторая высота. На этих мониторах практически все сайты имели фиксированную ширину.</description></item><item><title>Meta Tags</title><link>https://andron13.de/school/frontend/html/11-html-meta-tag/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/html/11-html-meta-tag/</guid><description>Мета теги # Open Graph Metatags # &amp;lt;!doctype html&amp;gt; &amp;lt;html lang=&amp;#34;ru_RU&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;description&amp;#34; content=&amp;#34;Помимо информации на странице, которая видна пользователю и расположена в теге body на вебсайте есть техническая информация, которая размещена в метатегах элемента head. В каждой мета-директиве мы можем повлиять на один или несколько парамтров, которые считываются браузером, поисковиком, социальной сетью или другими сайтами. &amp;#34; /&amp;gt; &amp;lt;meta property=&amp;#34;og:locale&amp;#34; content=&amp;#34;ru_RU&amp;#34; /&amp;gt; &amp;lt;meta property=&amp;#34;og:type&amp;#34; content=&amp;#34;article&amp;#34; /&amp;gt; &amp;lt;meta property=&amp;#34;og:title&amp;#34; content=&amp;#34;Что такое метатеги, на что они влияют и как их правильно настраивать&amp;#34; /&amp;gt; &amp;lt;meta property=&amp;#34;og:description&amp;#34; content=&amp;#34;Помимо информации на странице, которая видна пользователю и расположена в теге body на вебсайте есть техническая информация, которая размещена в метатегах элемента head.</description></item><item><title>Pseudo Classes and Pseudo Elements</title><link>https://andron13.de/school/frontend/css/10-css-pseudo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/10-css-pseudo/</guid><description>Pseudo Classes and Pseudo Elements
https://medium.com/@ABatickaya/%D0%B8%D1%81%D1%87%D0%B5%D1%80%D0%BF%D1%8B%D0%B2%D0%B0%D1%8E%D1%89%D0%B5%D0%B5-%D1%80%D1%83%D0%BA%D0%BE%D0%B2%D0%BE%D0%B4%D1%81%D1%82%D0%B2%D0%BE-%D0%BF%D0%BE-%D0%BF%D1%81%D0%B5%D0%B2%D0%B4%D0%BE%D1%8D%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D0%BC-%D0%B8-%D0%BF%D1%81%D0%B5%D0%B2%D0%B4%D0%BE%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D0%B0%D0%BC-%D0%B2-css-3282b5ea029</description></item><item><title>SQL запросы</title><link>https://andron13.de/school/database/05-sql-select-requests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/database/05-sql-select-requests/</guid><description>SQL запросы # Gegeben ist die folgende Artikel-Tabelle. Nachfolgend wird diese Tabelle mittels Select-Anweisung abgefragt.
id bezeichnung farbe einkaufsPreis lieferant bestand 114629 Kaschmir Rosé 6,95 Lana Grossa 386 114670 Cotonara Weiß 4,95 Lana Grossa 124 114324 Eco Vitas Hellgelb 3,50 ONline 956 114339 Cotton Baby Apricot 2,95 ONline 45 112999 Kaschmir Anthrazit 11,95 Junghans 39 111072 Cotonara Beige 2,95 Junghans 428 https://web.</description></item><item><title>StringBuffer, StringBuilder и String в чём отличие</title><link>https://andron13.de/school/java/oop-course/012-java-string-stringbuffer-stringbuilder/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/012-java-string-stringbuffer-stringbuilder/</guid><description>#String, StringBuffer и StringBuilder — Java OPP 12
(В разработке)
Нас уже не должны пугать ключевые слова с большой буквы. Нам известны как минимум два из них String и Scanner. StringBuffer и StringBuilder родные братья уже давно изученного типа данных String.
Чем был плох String? # String всем прекрасен, только он неизменяем (immutable). И операции со строковыми величинами иногда дороги в потреблении ресурсов. Например, если мы в цикле изменяем строку добавляя к ней символы.</description></item><item><title>Switch и Case оператор выбора — Java для начинающих</title><link>https://andron13.de/school/java/basic-course/006-java-switch-case/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/006-java-switch-case/</guid><description>Switch и Case: оператор выбора — введение в Java 006 # В этом уроке мы рассмотрим на примерах оператор выбора Switch и опции выбора Case.
Пример:
За пятёрку в четверти по математике папа обещал мне велосипед. За четвёрку в четверти по математике мама купит мне GoPro4. За тройку меня, наверное, не будут ругать. За двойку меня отругают. За единицу меня &amp;ldquo;убьют&amp;rdquo;. Опять двойка Типичный жизненный пример, который можно написать на Java:</description></item><item><title>test</title><link>https://andron13.de/school/frontend/css/05-css-reset/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/05-css-reset/</guid><description>CSS Инструменты: Сброс CSS Целью сброса таблицы стилей является уменьшение несоответствий в браузере в таких вещах, как высота строк по умолчанию, размер полей и шрифтов заголовков и так далее. Общие рассуждения на эту тему обсуждались в майском посте 2007 года, если вам интересно. Стили сброса довольно часто появляются в CSS фреймворках, а оригинальный &amp;ldquo;meyerweb reset&amp;rdquo; нашел свой путь в Blueprint, среди прочего.
Стили сброса, приведённые здесь, намеренно очень общие. Для элемента тела, например, по умолчанию не задано никакого цвета или фона.</description></item><item><title>test</title><link>https://andron13.de/school/frontend/css/16-html-css/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/16-html-css/</guid><description>Введение в #</description></item><item><title>test</title><link>https://andron13.de/school/frontend/css/20-html-css-layout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/20-html-css-layout/</guid><description>margin: 0 auto; width: 1000px;
центрирует по середине
Этот прием не работает, если элемент не блочный или у него не указана ширина.</description></item><item><title>test</title><link>https://andron13.de/school/frontend/html/10-html-video-audio-embed/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/html/10-html-video-audio-embed/</guid><description>C:\Users\ptcho\Projects\HugoStatic\try-and-cry-07-2020\mydocs\content\school\frontend\fe-exercises\00-solution\04</description></item><item><title>Блочные и структурные теги</title><link>https://andron13.de/school/frontend/html/04-html-tags/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/html/04-html-tags/</guid><description>HTML теги # Мы уже говорили про структурные элементы. Это те теги, которые размечают структуру текста.
Структурные теги # Название Короткое пояснение body Содержит весь контент страницы. main Главное уникальное содержимое страницы. Используется в документе только один раз. header &amp;ldquo;Шапка секции/документа&amp;rdquo;. Важная вводная информация. В html5 разрешено многократное использование на одной странице. footer Заключительная часть секции.</description></item><item><title>Введение в CSS</title><link>https://andron13.de/school/frontend/css/01-css-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/01-css-intro/</guid><description>CSS - Cascading Style Sheets # &amp;lt;h1 style=&amp;#34;color:blue;&amp;#34;&amp;gt;A Blue Heading&amp;lt;/h1&amp;gt; &amp;lt;style&amp;gt; body {background-color: powderblue;} h1 {color: blue;} p { color: red; font-family: courier; font-size: 160%; border: 2px solid powderblue; } &amp;lt;/style&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;styles.css&amp;#34;&amp;gt; CSS - каскадные таблицы стилей.
Задача CSS привести HTML страницу в подобающий вид. Украсить, если хотите. При этом задача HTML, самое позднее с появления CSS структурировать контент.
То есть, мы говорим о трёх составляющих у веб-страницы - HTML, CSS, контент.</description></item><item><title>Введение в HTML - первая страница</title><link>https://andron13.de/school/frontend/html/02-html-hello-world/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/html/02-html-hello-world/</guid><description>Теперь мы попробуем приветствовать мир.
Прежде чем мы действительно начнём изучение следующей главы нам надо решить один вопрос. Терминология:
Сайт, вебсайт Страница, вебстраница Одностраничник, многостраничник Вебпроект, вебприложение Лэндинг, Landing page Сайт визитка Корпоротивный сайт Вебмагазин Онлайн СМИ Вебпортал Вебресурс Это всё возможные синонимы, которые можно употребить к тому или иному веб-проекту.
К множеству подстраниц на одном ресурсе я буду стараться применять сайт, ресурс. К одной единственной странице на сайте я буду обращаться как страница, документ или страница сайта.</description></item><item><title>Гиперссылки в HTML</title><link>https://andron13.de/school/frontend/html/08-html-url-tag-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/html/08-html-url-tag-a/</guid><description>Ссылка в HTML # Ссылка самая важная часть в интернете. Именно благодаря ссылкам мы связываем полезные и бесполезные страницы между собой. Она настолько важна, что раньше её называли не просто ссылкой, а гипер-ссылкой(hyperlink). Напомню, что мы изучаем HTML, что значит HyperText Markup Language.
А гипертекст это не что иное, как текст с гипер-ссылками.(Hypertext is text with hyperlinks)
Синтаксически мы различаем принципиально два типа ссылок:
Ссылка на раздел страницы. Ссылка на другую страницу.</description></item><item><title>Как правильно создавать пароли</title><link>https://andron13.de/school/tools/04-how-to-create-passwords/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/tools/04-how-to-create-passwords/</guid><description>Немного о паролях, или как их правильно создавать
-Вы слабое звено! И вы выбываете из игры!
Можно добавить ещё пару анекдотов, чтобы правда жизни не так резала по сердцу.
Однако. Здравствуйте. При самом крутом алгоритме шифрования пароль &amp;ldquo;мама&amp;rdquo; вскрывается за одну секунду. Также не стоит ставить паролем свой день рождения. Если бы вы знали сколько мужей погорело на различных Love-порталах, выбравших свой день рождения паролем. А недовольных дворецких и секретарш на пенсии, тоже ещё никто не удосужился отменить.</description></item><item><title>Карта изображений - map, area, shape</title><link>https://andron13.de/school/frontend/html/07-html-image-map/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/html/07-html-image-map/</guid><description>Фотокарта с активными ссылками # Наверное вы уже видели изображения на которых различные области оказывались кликабельными. Нет? Тогда представьте карту Германии(своей страны, города) и что все отдельные земли ссылаются на собственный раздел на сайте.
Прежде чем, мы займёмся такой сложной географической картой, давай потренируемся на чём то более простом и создадим карту с координатами для кликов.
Геометрические фигуры Пример кода с кликабельными фигурами # &amp;lt;map name=&amp;#34;simple-map&amp;#34;&amp;gt; &amp;lt;area shape=&amp;#34;rect&amp;#34; coords=&amp;#34;100,100,500,500&amp;#34; href=&amp;#34;square.</description></item><item><title>Модульная сетка - Бесплатные уроки HTML и CSS.</title><link>https://andron13.de/school/frontend/css/30-html-modular-grid-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/30-html-modular-grid-intro/</guid><description>Модульная сетка # Дополнительные ссылки # https://www.quackit.com/css/grid/tutorial/ https://developer.mozilla.org/ru/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout https://developer.mozilla.org/ru/docs/Web/CSS/CSS_Grid_Layout/Relationship_of_Grid_Layout https://medium.com/@stasonmars/%D0%B2%D0%B5%CC%88%D1%80%D1%81%D1%82%D0%BA%D0%B0-%D0%BD%D0%B0-grid-%D0%B2-css-%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5-%D1%80%D1%83%D0%BA%D0%BE%D0%B2%D0%BE%D0%B4%D1%81%D1%82%D0%B2%D0%BE-%D0%B8-%D1%81%D0%BF%D1%80%D0%B0%D0%B2%D0%BE%D1%87%D0%BD%D0%B8%D0%BA-220508316f8b</description></item><item><title>Настройка, горячие клавиши, debugging в IntelliJ IDEA</title><link>https://andron13.de/school/java/basic-course/025-java-idea-basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/025-java-idea-basics/</guid><description>IntelliJ IDEA — настройка, горячие клавиши, debugging — введение в Java 025 # (В разработке)
Сегодняшний программист очень сильно отличается от программиста 90-х.
Блокноты сменились мощными инструментами, которые подсказывают нам даже эффективные методы решения. Порой, кажется, что ещё чуть-чуть и людям точно не надо будет учить программирование, потому что Idea сделает всё сама.
Но пока этого не случилось нам стоит потратить немного времени на настройку самого главного инструмента, в котором мы пишем код.</description></item><item><title>Обмен значений переменных в Java</title><link>https://andron13.de/school/java/basic-course/024-java-swap-two-variables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/024-java-swap-two-variables/</guid><description>Обмен значений переменных — введение в Java 024 # Допустим у нас есть переменная A со значением 5 и переменная B со значением 3. И нам нужно поменять значения у переменных местами. Это достаточно часто используемая операция и есть далеко не один способ её реализации.
int a = 5; int b = 7; int temp = a; a = b; b = temp; Мы создаём дополнительную переменную. Передаём ей временно для хранения значение A, в само A передаём значение B.</description></item><item><title>Относительные и абсолютные пути - введение в HTML</title><link>https://andron13.de/school/frontend/html/03-html-path/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/html/03-html-path/</guid><description>Относительные и абсолютные пути # С HTML у нас будет очень много различных файлов и папок, и изображений, и стилей. Поэтому нам надо понять как именно можно указывать месторасположение наших ресурсов.
Я подготовил несколько вариантов, ссылки на файл или ресурс.
1. &amp;#34;styles.css&amp;#34; 2. &amp;#34;./styles.css&amp;#34; 3. &amp;#34;./../styles.css&amp;#34; 4. &amp;#34;/my_styles/styles.css&amp;#34; 5. &amp;#34;&amp;lt;a href=&amp;#34;https://www.povar.eu/&amp;#34;&amp;gt;povar.eu&amp;lt;/a&amp;gt;&amp;#34; 6. &amp;lt;a href=&amp;#34;#&amp;#34;&amp;gt;Empty link&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt; 7. &amp;lt;a href=&amp;#34;/&amp;#34;&amp;gt;home&amp;lt;/a&amp;gt; Первый и второй вариант пытаются указать на один и тот же файл, который лежит в этой же папке.</description></item><item><title>Перечисления в HTML5 - ul, ol, dt</title><link>https://andron13.de/school/frontend/html/09-html-u-o-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/html/09-html-u-o-list/</guid><description>Перечисления в HTML5 - ul, ol, dt # Мы можем перечислять элементы в HTML. Для этого у нас есть несколько способов. Пример:
&amp;lt;ul&amp;gt; &amp;lt;li&amp;gt;Java&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;PHP&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;Python&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;JavaSctipt&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;ol&amp;gt; &amp;lt;li&amp;gt;Java&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;PHP&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;Python&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;JavaSctipt&amp;lt;/li&amp;gt; &amp;lt;/ol&amp;gt; &amp;lt;dl&amp;gt; &amp;lt;dt&amp;gt;GIF&amp;lt;/dt&amp;gt; &amp;lt;dd&amp;gt;GIF (англ. Graphics Interchange Format «формат для обмена изображениями») — растровый формат графических изображений. Способен хранить сжатые данные без потери качества в формате не более 256 цветов. Разработан в 1987 году.&amp;lt;/dd&amp;gt; &amp;lt;dt&amp;gt;JPEG&amp;lt;/dt&amp;gt; &amp;lt;dd&amp;gt;JPEG (произносится «джейпег», англ.</description></item><item><title>Пузырьковая сортировка — Bubble Sort. Алгоритмы сортировок.</title><link>https://andron13.de/school/java/basic-course/027-java-sorting-algorithms-01-bubblesort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/027-java-sorting-algorithms-01-bubblesort/</guid><description>Алгоритмы сортировок, Bubble Sort — введение в Java 027 # массив требующий сортировки Представьте себе ситуацию, что вы просите свой компьютер отсортировать фотографии по размеру или занимаемому месту, товары на странице магазина по цене и новости на сайте по дате написания.
Все эти данные, массивы информации сортируются. Сейчас мы попробуем написать простейший алгоритм сортировки массива состоящего из чисел.
Пузырьковая сортировка # В пузырьковой сортировке мы по очереди просматриваем попарно весь массив.</description></item><item><title>Таблицы и табличная вёрстка</title><link>https://andron13.de/school/frontend/html/05-html-table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/html/05-html-table/</guid><description>Таблицы # Так как таблица очень важный элемент HTML, мы должны знать его особенности досконально. Ведь в конце концов важная информация в интернете даётся часто в табличном виде. Сравнение доходов слоёв населения, список школ города, посещаемость учеников и тд и тп.
Пример таблицы в HTML:
&amp;lt;table&amp;gt; &amp;lt;thead&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th colspan=&amp;#34;2&amp;#34;&amp;gt;The table header&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/thead&amp;gt; &amp;lt;tbody&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;The table body&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;with two columns&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/tbody&amp;gt; &amp;lt;/table&amp;gt; Результат работы
таблица в опере Я бы не сказал, что, то что я вижу на экране меня как-то впечатлило.</description></item><item><title>Тип данных boolean и логические операторы — Java для начинающих</title><link>https://andron13.de/school/java/basic-course/005-java-boolean/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/005-java-boolean/</guid><description>Тип данных boolean и логические операторы — введение в Java 005 # Правда или ложь Boolean # Boolean в Java — это логический тип данных. Переменная типа boolean может принимать всего два значения — это правда или ложь — true &amp;amp; false. Эти два значения обозначаются в других языках и часто выдаются на экран как 1 и 0, но всё же не равны этим значениям: например, выражение boolean b = 0; приведёт к ошибке при компиляции программы.</description></item><item><title>Типы данных char и String, примеры применения - 04</title><link>https://andron13.de/school/java/basic-course/004-java-char-string/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/004-java-char-string/</guid><description>Типы данных char и String: примеры применения — введение в Java 004 # Char # Таблица символов Если в программе нужны символы, то для этого мы пользуемся типом данных char. Например:
public class HelloChar { public static void main(String[] args) { char zahl = 100; // Сотый по счёту символ в таблице char octal = &amp;#39;\u039A&amp;#39;; // Вызов определённого символа кодом char zeichen = &amp;#39;A&amp;#39;; // Буква A char tabulator = &amp;#39;\t&amp;#39;; // В русском языке клавиша называется &amp;#34;Таб&amp;#34; // Табулятор char phi = &amp;#39;\u03A6&amp;#39;; // Греческая буквая Фита - PHI System.</description></item><item><title>Типы данных с плавающей точкой - 03</title><link>https://andron13.de/school/java/basic-course/003-java-float-double/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/003-java-float-double/</guid><description>Типы данных с плавающей точкой: float и double — введение в Java 003 # Числа с плавающей точкой # Для хранения дробных чисел в Java используют float и double. Правильное название — простые (примитивные) типы данных с плавающей точкой. Примитивные типы данных — byte, short, int, long, которые являются целыми числами, — мы рассматривали - здесь.
число Пи Float # Давайте сразу рассмотрим практический пример:</description></item><item><title>Уроки HTML и CSS Online</title><link>https://andron13.de/school/frontend/html/01-html-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/html/01-html-intro/</guid><description>Веб-девелопмент — пособие для начинающих # Предисловие # Свой первый сайт я сделал ещё в 96-м году. Просто скопировав исходники с сайта модного компьютерного журнала и поставив их на свой. Принципиально это не самый плохой способ. Подсмотреть и сделать лучше. Что бы понять как это работает — просмотр чужих примеров просто обязателен.
Последние пару лет слово пример практически не используется в моём IT-круге. Принято говорить кейсы, кейс клиентa, пользовательский кейс.</description></item><item><title>Условный оператор if, if else — Java для начинающих</title><link>https://andron13.de/school/java/basic-course/007-java-if-else/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/007-java-if-else/</guid><description>Условный оператор if, if-else — введение в Java 007 # если, то В прошлом уроке я рассматривал оператор выбора Switch. Оператор IF имеет схожие функции и примерно те же цели. Основные отличия — в используемых условиях. Кстати, как обычно, верить мне необязательно: можно спросить у Google, например &amp;ldquo;java switch vs if сравнение&amp;rdquo;. Только на Хабре я нашёл несколько статей, рассматривающих эстетическую сторону вопроса, вопрос скорости, эффективности и вопрос используемых методов.</description></item><item><title>Java-OOP 11 - Обыкновенные дроби, НОД, НОК</title><link>https://andron13.de/school/java/oop-course/011-java-oop-practical-number-and-fraction/</link><pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/011-java-oop-practical-number-and-fraction/</guid><description>Мы уже не раз складывали два простых числа, две десятичные дроби или даже простое число с десятичной дробью. Однако мир состоит не только из примитивных данных, порой нам приходится работать и с дробями, с обыкновенными дробями.
Обыкновенные дроби # сложение дробей Обыкновенная дробь, как мы знаем из школы, состоит из двух частей: верхней и нижней. Это если не считать чёрточку посередине за часть дроби. Верхнюю часть дроби в математике принято называть числитель, а нижнюю часть знаменатель.</description></item><item><title>Java-OOP 02 - Перегрузка методов в Java Overloadin</title><link>https://andron13.de/school/java/oop-course/002-java-oop-method-overloading-polymorphism/</link><pubDate>Fri, 06 Nov 2020 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/002-java-oop-method-overloading-polymorphism/</guid><description>Перегрузка методов (Method Overloading) # В Java несколько методов из одного класса могут иметь одно название.
Одно название и несколько методов # Давайте сразу рассмотрим пример.
public class Calculator { public static int addition(int a, int b) { return a + b; } public static double addition(double a, double b) { return a + b; } } Очевидное-невероятное, но Java сама выбирает подходящий метод, для решения проблемы.Если мы передадим ей два int, то выберется первый метод, если два double, то JDK выберет самостоятельно нижний метод.</description></item><item><title>Java-OOP 03 - Конструктор в Java и ключевое слово this - введение в Java-OOP</title><link>https://andron13.de/school/java/oop-course/003-java-oop-constructor-this/</link><pubDate>Fri, 06 Nov 2020 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/003-java-oop-constructor-this/</guid><description>Конструктор в Java и ключевое слово this- введение в Java-OOP 003 # Стройка Создание объектов в Java часто сравнивает с обычной стройкой в жизни. И английский constructor и русский конструктор связаны со строительством напрямую.
Принципиально, конструктор - это просто метод. Просто метод который создаёт объекты. В связи с тем, что это очень важный метод и является краеугольным камнем всей парадигмы ООП, то у этого метода есть привилегия.</description></item><item><title>Java-OOP 04 - Инкапсуляция - encapsulation</title><link>https://andron13.de/school/java/oop-course/004-java-oop-encapsulation-get-set/</link><pubDate>Fri, 06 Nov 2020 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/004-java-oop-encapsulation-get-set/</guid><description>Инкапсуляция - encapsulation # В слове инкапсуляция корень капсула. Если мы спрячем в &amp;ldquo;капсулу&amp;rdquo; параметры объекта, то это и будет инкапсуляцией.
Инкапсуляция - encapsulation Зачем нужна инкапсуляция? # Во-первых, к некоторым параметрам не должно быть доступа ни у других программ, ни у пользователей, ни у (даже!) программистов. Например:
Поле день рождения в программе паспортного стола. Посмотреть его можно. Изменить нельзя. Это поле должно быть создано в месте с записью о человеке и позже его менять нельзя.</description></item><item><title>Java-OOP 05 - наследование - inheritance</title><link>https://andron13.de/school/java/oop-course/005-java-oop-inheritance/</link><pubDate>Fri, 06 Nov 2020 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/005-java-oop-inheritance/</guid><description>Наследование - inheritance # При разработке приложения для предприятия мы можем столкнуться с тем, что у различных профессий или должностей существуют различные параметры(поля класса) и поведение(методы).
Простейший пример университет. В нём есть студенты, преподаватели, научные и технические работники. У всех этих преподавателей должен быть пропуск. Например в зависимости от типа пропуска различные скидки в университетской столовой(например).
Давайте создадим класс Студента, Препода, и Работника.
public class Student { private String firstName; private String secondName; private String uniID; void study(){ } } public class Teacher { private String firstName; private String secondName; private String uniID; void teach(){ } } public class Worker { private String firstName; private String secondName; private String uniID; void work(){ } } На самой ранней стадии написания поля мы видим, что в нашем приложении будут 3 класса, которые содержат повторяющийся код.</description></item><item><title>Java-OOP 01 - Первые объекты</title><link>https://andron13.de/school/java/oop-course/001-java-object-introduction-chapter-1/</link><pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/001-java-object-introduction-chapter-1/</guid><description>Первые объекты в Java - введение в Java-OOP 001 # Введение в объектно-ориентированное программирование(Object-Oriented Programming) продолжает курс - Басовый курс Java.
Java является объектно-ориентированным языком. Хотя на сегодня в ООП умеют играть все популярные языки. Это новшество на конец прошлого века, сегодня уже добавлено даже в старые языки, изначально не поддерживающие ООП (например php, javascript).
ООП очень важная тема. И всё что было до этого было просто разминкой перед настоящей Java.</description></item><item><title>Взломанные пароли и Google</title><link>https://andron13.de/posts/hacked-passwords/</link><pubDate>Tue, 26 Jan 2021 10:20:02 +0200</pubDate><guid>https://andron13.de/posts/hacked-passwords/</guid><description>Злые хакеры никогда не спят и каждую ночь успешно взламывают сайты.
Взломанные сайты и базы данных # В результате базы данных этих сайтов выставляют на продажу в даркнете, чёрном-чёрном интернете.
В базах данных можно найти имена людей, емайлы и их пароли. После чего можно попробовать залогиниться по этим данным емаил+пароль на других сайтах. Например логин и пароль от сайта майспейс попробовать на фейсбуке.
Существуют не только злые (чёрные) хакеры. В нашем мире есть и белые(добрые) хакеры.</description></item><item><title>У меня снова есть блог</title><link>https://andron13.de/posts/hello/</link><pubDate>Sun, 05 Jul 2020 19:41:02 +0200</pubDate><guid>https://andron13.de/posts/hello/</guid><description>Блогер это навсегда # Около 5 лет у меня не было блога. И вот у меня снова появилось желание, а мои возможности позволяют выбирать из большего, чем 10 лет назад.
Надеюсь до конца лета я смогу выложить свой курс введения в веб-программирование с первым языком обучения Java.
Проверьте сами, вдруг получилось. На секундочку, сам канал сделал ещё 4 года назад - 17.10.2016.
ночной берлин</description></item><item><title>Метод многокритериальных взвешенных оценок</title><link>https://andron13.de/school/pm/02-weighted-sum-model/</link><pubDate>Wed, 21 Jul 2021 09:49:14 +0200</pubDate><guid>https://andron13.de/school/pm/02-weighted-sum-model/</guid><description>Муки выбора # Проект менеджмент это в первую очередь управление проектом. Управление это не в последнюю очередь принятие решений.
Выбирать нужно всегда: # Какой фреймворк использовать Какую библиотеку Какую базу данных Какую часть приложения мы будем делать первым Какой баг мы будем устранять первым За что хвататься Какой принтер покупать Кого брать на работу На какую работу устраиваться Для новичка принятие решений всегда необычайно сложно, несмотря на то, что есть несколько методик выбора из вариантов.</description></item><item><title>Введение в проект менеджмент</title><link>https://andron13.de/school/pm/01-project-management/</link><pubDate>Wed, 30 Jun 2021 18:56:26 +0200</pubDate><guid>https://andron13.de/school/pm/01-project-management/</guid><description>Многие проекты, даже великие проекты были реализованы без всякого плана. Захотел купить игровую приставку - взял деньги у мамы, пошёл в магазин, купил, принёс домой, играешь.
Поставленная задача. Ресурсы. Реализация. Доставка. Тестирование. Сложности могут начаться на этапе нахождения ресурсов - мама не даёт деньги. И надо думать где их заработать. Или на этапе покупки - все приставки раскупили и новых ещё долго не будет. При покупке приставки могут начаться муки выбора.</description></item><item><title>Метод Дельфи</title><link>https://andron13.de/school/pm/03-delphi-method/</link><pubDate>Wed, 30 Jun 2021 18:56:26 +0200</pubDate><guid>https://andron13.de/school/pm/03-delphi-method/</guid><description>Сколько времени занимает создание сайта? # Однажды, в наказание за шалости и обман, тетя Полли заставила Тома красить забор длиной в тридцать ярдов.
Тридцать ярдов согласно гуглу примерно 27 метров. Предположим, что забор был двухметровой высоты. Надо покрасить 54квадратных метра. Как оценить время работы. Давайте подумаем, сколько времени понадобиться тебе? Сколько времени понадобиться сыну маминой подруги, и сколько времени мы готовы оплатить работнику, который будет перекрашивать за Томом весь забор?</description></item><item><title>Precedence diagram method</title><link>https://andron13.de/school/pm/04-precedence-diagram-method/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://andron13.de/school/pm/04-precedence-diagram-method/</guid><description>Сетевой график - Netzplantechnik # Ещё одна методология, которая широко используется в Германии. Хотя должен сказать, что существует множество разновидностей сетевого плана как в Германии, так и в инженерных вузах на востоке Европы.
Мы уже умеем определять длительность работ для конкретных частей проекта. Давайте попробуем посмотреть на проект в целом.
На этих выходных мне надо сделать плов на костре, а значит мне надо подумать о следующем:
Купить все ингредиенты для костра и плова (A)</description></item><item><title/><link>https://andron13.de/school/frontend/01-webdesign-tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/01-webdesign-tools/</guid><description>Ссылки на полезные ресурсы для прототипирования и дизайна # https://www.figma.com/ https://www.adobe.com/products/xd.html https://www.canva.com/ https://crello.com/ru/ https://www.sketch.com/ https://balsamiq.com/ https://www.powermockup.com/ https://www.axure.com/ https://moqups.com/ https://www.flowmapp.com/ https://dynomapper.com/ http://www.visualsitemapper.com/ Счётчики # https://css-live.ru/articles/razvlecheniya-s-css-schyotchikami.html https://codepen.io/lonekorean/pen/KkudD https://codepen.io/deniscreative/pen/mwGpyB https://codepen.io/ragak/pen/ywXegE https://html5css.ru/edithtm/index.php https://codepen.io/ilhantekir/pen/igyEe</description></item><item><title/><link>https://andron13.de/school/frontend/css/0100-css-even-odd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/0100-css-even-odd/</guid><description>https://www.w3.org/Style/Examples/007/evenodd.en.html https://www.w3schools.com/cssref/tryit.asp?filename=trycss3_nth-child_odd_even</description></item><item><title/><link>https://andron13.de/school/frontend/css/0101-html-version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/0101-html-version/</guid><description>https://www.heise.de/developer/artikel/Schrittweise-Versionsnummern-richtig-vergeben-1859566.html</description></item><item><title/><link>https://andron13.de/school/frontend/css/0102-css-how-to-center/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/0102-css-how-to-center/</guid><description>Дополнительные ссылки # Прекрасная статья о выравнивании элементов различными способами по горизонтали и вертикали.</description></item><item><title/><link>https://andron13.de/school/frontend/css/13-css-mdia-queries-magic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/13-css-mdia-queries-magic/</guid><description># prefers https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme
https://codepen.io/jonneal/pen/vzPwWo
https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-transparency
https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion
https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-contrast
https://habr.com/ru/post/485768/</description></item><item><title/><link>https://andron13.de/school/frontend/css/23-css-import-and-variable/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/23-css-import-and-variable/</guid><description>@import &amp;#34;navigation.css&amp;#34;; /* Via string */ or @import url(&amp;#34;navigation.css&amp;#34;); /* Via url */ or @import url(&amp;#34;css/print-style.css&amp;#34;) print; @import url(&amp;#34;fineprint.css&amp;#34;) print; @import url(&amp;#34;bluish.css&amp;#34;) projection, tv; @import &amp;#39;custom.css&amp;#39;; @import url(&amp;#34;chrome://communicator/skin/&amp;#34;); @import &amp;#34;common.css&amp;#34; screen, projection; @import url(&amp;#39;landscape.css&amp;#39;) screen and (orientation:landscape); :root { --bg-dark: #ffffff; } home.css @import &amp;#34;colors.css&amp;#34;; body: var(--bg-dark) @import &amp;#39;style-sheet-name.css&amp;#39;; @import url(../relative/path/to/styles.css); @import url(http://absolute-path.com/css/some-styles.css); https://www.w3.org/TR/css3-mediaqueries/ http://htmlbook.ru/css/import https://www.tutorialrepublic.com/css-tutorial/css-media-types.php https://developer.mozilla.org/en-US/docs/Web/CSS/@import https://tympanus.net/codrops/css_reference/import/</description></item><item><title/><link>https://andron13.de/school/frontend/css/24-css-gradient/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/24-css-gradient/</guid><description>.header { height: 95vh; background-image: linear-gradient( to right, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8) ), url(../img/hero.jpg); background-position: top; background-size: cover; clip-path: polygon(); }</description></item><item><title/><link>https://andron13.de/school/frontend/css/25-css-polygon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/25-css-polygon/</guid><description>clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%); https://bennettfeely.com/clippy/
https://www.udemy.com/course/advanced-css-and-sass/learn/lecture/8274400#notes</description></item><item><title/><link>https://andron13.de/school/frontend/css/30-css-animation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/30-css-animation/</guid><description>https://github.com/rolling-scopes-school/tasks/tree/master/stage1/modules/eventloop-animation</description></item><item><title/><link>https://andron13.de/school/frontend/css/51-html-css-practice-burger-menu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/51-html-css-practice-burger-menu/</guid><description># https://medium.com/@krokhin.ezh/%D0%BA%D0%B0%D0%BA-%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D1%82%D1%8C-%D0%B3%D0%B0%D0%BC%D0%B1%D1%83%D1%80%D0%B3%D0%B5%D1%80-%D0%BC%D0%B5%D0%BD%D1%8E-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D1%83%D1%8F-%D1%82%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE-css-%D0%B8-html-c6abf7c32c6d
https://blog.prototypr.io/understanding-animation-based-on-the-burger-icon-css-example-9674e364d2a8
https://medium.com/frontendshortcut/how-to-make-a-burger-in-html-a-beginner-tutorial-dca7b4b0a179</description></item><item><title/><link>https://andron13.de/school/frontend/css/80-link-or-button/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/80-link-or-button/</guid><description>https://habr.com/ru/post/317728/</description></item><item><title/><link>https://andron13.de/school/frontend/css/bem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/bem/</guid><description>https://habr.com/ru/post/256109/ https://webformyself.com/css-metodologii-css-bem-smacss-ecss/ OOCSS
https://habr.com/ru/post/432586/ https://vk.com/@webcademy-sposoby-organizacii-css-koda-chast-3-mcss-amcss-fun</description></item><item><title/><link>https://andron13.de/school/frontend/css/scss_sass/scss-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/css/scss_sass/scss-intro/</guid><description>https://sass-scss.ru/guide/
https://habr.com/ru/post/434098/
https://github.com/rolling-scopes-school/tasks/tree/master/stage1/modules/sass</description></item><item><title/><link>https://andron13.de/school/frontend/favicon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/favicon/</guid><description>https://habr.com/ru/post/522844/ https://pr-cy.ru/news/p/7346-rukovodstvo-po-favikonu-dlya-sayta https://www.youtube.com/watch?v=YHV35GiXA-w</description></item><item><title/><link>https://andron13.de/school/frontend/fe-exercises/js-exec/01-js-exec/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/js-exec/01-js-exec/</guid><description>Преобразуйте строку: 'background-color' -&amp;gt; 'backgroundColor' 'list-style-image' -&amp;gt; 'listStyleImage' 'border-bottom-right-radius' -&amp;gt; 'borderBottomRightRadius' Преобразуйте строку: 'backgroundColor' -&amp;gt; 'background_color' 'listStyleImage' -&amp;gt; 'list_style_image' 'borderBottomRightRadius' -&amp;gt; 'border_bottom_right_radius' Посчитать средний возраст users Найти самого молодого Найти самого старшего Создать массив из юзеров, которые не живут в Италии Создать массив из юзеров, которые старше 16, но младше 35 Создать отдельный массив из имен юзеров Создать массив из юзеров, чьи имена начинаются на &amp;ldquo;М&amp;rdquo; const users =[ {name: 'Masha', address:{city:'Berlin', country:'Germany'}, age: 32}, {name: 'Dasha', address:{city:'Tokio', country:'Japan'}, age: 28}, {name: 'Sasha', address:{city:'London', country:'England'}, age: 15}, {name: 'Glasha', address:{city:'Rom', country:'Italy'}, age: 46}, {name: 'Misha', address:{city:'Verona', country:'Italy'}, age: 38}, {name: 'Arkasha', address:{city:'Barcelona', country:'Spain'}, age: 18} ] https://youtu.</description></item><item><title/><link>https://andron13.de/school/frontend/fe-exercises/rsschool/links-epam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/rsschool/links-epam/</guid><description>https://github.com/rolling-scopes-school/tasks/tree/master/stage1#%D0%BD%D0%B5%D0%B4%D0%B5%D0%BB%D1%8F-4
https://github.com/AlreadyBored/basic-js-ds https://github.com/rolling-scopes-school/tasks/tree/master/stage1/modules/events/
https://github.com/rolling-scopes-school/tasks/blob/master/tasks/christmas-task.md
https://github.com/rolling-scopes-school/tasks/blob/master/tasks/museum/museum-dom.md</description></item><item><title/><link>https://andron13.de/school/frontend/fe-exercises/rsschool/momentum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/fe-exercises/rsschool/momentum/</guid><description>momentum # Momentum - аналог одноимённого приложения интернет-магазина Chrome. Приложение показывает время и имя пользователя. Фоновое изображение и приветствие меняются в зависимости от времени суток.
В приложении есть часы, слайдер изображений, виджеты погоды, аудиоплеер, блок цитата дня. настройки. Для хранения имени пользователя и населённого пункта используется локальное хранилище - local storage.
Ключевые навыки: # методы поиска элементов; вывод данных на страницу; работа с датой и временем; работа с аудио; сохранение данных в local storage; использование рекурсивного setTimeout; деление js-кода на модули; генерирование html через js; работа с асинхронными запросами.</description></item><item><title/><link>https://andron13.de/school/frontend/html/12-aria/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/html/12-aria/</guid><description>https://www.w3.org/TR/html-aria/
https://developer.mozilla.org/de/docs/Web/Accessibility/ARIA https://www.w3.org/Translations/WCAG20-de/
Verordnung zur Schaffung barrierefreier Informationstechnik nach dem Behindertengleichstellungsgesetz (Barrierefreie-Informationstechnik-Verordnung - BITV 2.0)</description></item><item><title/><link>https://andron13.de/school/frontend/html/12-html-lang-ru/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/html/12-html-lang-ru/</guid><description># https://r12a.github.io/app-subtags/ https://www.w3schools.com/tags/ref_language_codes.asp https://html.spec.whatwg.org/#the-lang-and-xml:lang-attributes https://developer.mozilla.org/ru/docs/Web/HTML/Global_attributes/lang В HTML5, атрибут lang может быть использован к любому элементу HTML (пройдёт валидацию), но в некоторых случаях в этом нет необходимости.
CULTURE SPEC.CULTURE ENGLISH NAME -------------------------------------------------------------- Invariant Language (Invariant Country) af af-ZA Afrikaans af-ZA af-ZA Afrikaans (South Africa) ar ar-SA Arabic ar-AE ar-AE Arabic (U.A.E.) ar-BH ar-BH Arabic (Bahrain) ar-DZ ar-DZ Arabic (Algeria) ar-EG ar-EG Arabic (Egypt) ar-IQ ar-IQ Arabic (Iraq) ar-JO ar-JO Arabic (Jordan) ar-KW ar-KW Arabic (Kuwait) ar-LB ar-LB Arabic (Lebanon) ar-LY ar-LY Arabic (Libya) ar-MA ar-MA Arabic (Morocco) ar-OM ar-OM Arabic (Oman) ar-QA ar-QA Arabic (Qatar) ar-SA ar-SA Arabic (Saudi Arabia) ar-SY ar-SY Arabic (Syria) ar-TN ar-TN Arabic (Tunisia) ar-YE ar-YE Arabic (Yemen) az az-Latn-AZ Azeri az-Cyrl-AZ az-Cyrl-AZ Azeri (Cyrillic, Azerbaijan) az-Latn-AZ az-Latn-AZ Azeri (Latin, Azerbaijan) be be-BY Belarusian be-BY be-BY Belarusian (Belarus) bg bg-BG Bulgarian bg-BG bg-BG Bulgarian (Bulgaria) bs-Latn-BA bs-Latn-BA Bosnian (Bosnia and Herzegovina) ca ca-ES Catalan ca-ES ca-ES Catalan (Catalan) cs cs-CZ Czech cs-CZ cs-CZ Czech (Czech Republic) cy-GB cy-GB Welsh (United Kingdom) da da-DK Danish da-DK da-DK Danish (Denmark) de de-DE German de-AT de-AT German (Austria) de-DE de-DE German (Germany) de-CH de-CH German (Switzerland) de-LI de-LI German (Liechtenstein) de-LU de-LU German (Luxembourg) dv dv-MV Divehi dv-MV dv-MV Divehi (Maldives) el el-GR Greek el-GR el-GR Greek (Greece) en en-US English en-029 en-029 English (Caribbean) en-AU en-AU English (Australia) en-BZ en-BZ English (Belize) en-CA en-CA English (Canada) en-GB en-GB English (United Kingdom) en-IE en-IE English (Ireland) en-JM en-JM English (Jamaica) en-NZ en-NZ English (New Zealand) en-PH en-PH English (Republic of the Philippines) en-TT en-TT English (Trinidad and Tobago) en-US en-US English (United States) en-ZA en-ZA English (South Africa) en-ZW en-ZW English (Zimbabwe) es es-ES Spanish es-AR es-AR Spanish (Argentina) es-BO es-BO Spanish (Bolivia) es-CL es-CL Spanish (Chile) es-CO es-CO Spanish (Colombia) es-CR es-CR Spanish (Costa Rica) es-DO es-DO Spanish (Dominican Republic) es-EC es-EC Spanish (Ecuador) es-ES es-ES Spanish (Spain) es-GT es-GT Spanish (Guatemala) es-HN es-HN Spanish (Honduras) es-MX es-MX Spanish (Mexico) es-NI es-NI Spanish (Nicaragua) es-PA es-PA Spanish (Panama) es-PE es-PE Spanish (Peru) es-PR es-PR Spanish (Puerto Rico) es-PY es-PY Spanish (Paraguay) es-SV es-SV Spanish (El Salvador) es-UY es-UY Spanish (Uruguay) es-VE es-VE Spanish (Venezuela) et et-EE Estonian et-EE et-EE Estonian (Estonia) eu eu-ES Basque eu-ES eu-ES Basque (Basque) fa fa-IR Persian fa-IR fa-IR Persian (Iran) fi fi-FI Finnish fi-FI fi-FI Finnish (Finland) fo fo-FO Faroese fo-FO fo-FO Faroese (Faroe Islands) fr fr-FR French fr-BE fr-BE French (Belgium) fr-CA fr-CA French (Canada) fr-FR fr-FR French (France) fr-CH fr-CH French (Switzerland) fr-LU fr-LU French (Luxembourg) fr-MC fr-MC French (Principality of Monaco) gl gl-ES Galician gl-ES gl-ES Galician (Galician) gu gu-IN Gujarati gu-IN gu-IN Gujarati (India) he he-IL Hebrew he-IL he-IL Hebrew (Israel) hi hi-IN Hindi hi-IN hi-IN Hindi (India) hr hr-HR Croatian hr-BA hr-BA Croatian (Bosnia and Herzegovina) hr-HR hr-HR Croatian (Croatia) hu hu-HU Hungarian hu-HU hu-HU Hungarian (Hungary) hy hy-AM Armenian hy-AM hy-AM Armenian (Armenia) id id-ID Indonesian id-ID id-ID Indonesian (Indonesia) is is-IS Icelandic is-IS is-IS Icelandic (Iceland) it it-IT Italian it-CH it-CH Italian (Switzerland) it-IT it-IT Italian (Italy) ja ja-JP Japanese ja-JP ja-JP Japanese (Japan) ka ka-GE Georgian ka-GE ka-GE Georgian (Georgia) kk kk-KZ Kazakh kk-KZ kk-KZ Kazakh (Kazakhstan) kn kn-IN Kannada kn-IN kn-IN Kannada (India) ko ko-KR Korean kok kok-IN Konkani kok-IN kok-IN Konkani (India) ko-KR ko-KR Korean (Korea) ky ky-KG Kyrgyz ky-KG ky-KG Kyrgyz (Kyrgyzstan) lt lt-LT Lithuanian lt-LT lt-LT Lithuanian (Lithuania) lv lv-LV Latvian lv-LV lv-LV Latvian (Latvia) mi-NZ mi-NZ Maori (New Zealand) mk mk-MK Macedonian mk-MK mk-MK Macedonian (Former Yugoslav Republic of Macedonia) mn mn-MN Mongolian mn-MN mn-MN Mongolian (Cyrillic, Mongolia) mr mr-IN Marathi mr-IN mr-IN Marathi (India) ms ms-MY Malay ms-BN ms-BN Malay (Brunei Darussalam) ms-MY ms-MY Malay (Malaysia) mt-MT mt-MT Maltese (Malta) nb-NO nb-NO Norwegian, Bokmal (Norway) nl nl-NL Dutch nl-BE nl-BE Dutch (Belgium) nl-NL nl-NL Dutch (Netherlands) nn-NO nn-NO Norwegian, Nynorsk (Norway) no nb-NO Norwegian ns-ZA ns-ZA Northern Sotho (South Africa) pa pa-IN Punjabi pa-IN pa-IN Punjabi (India) pl pl-PL Polish pl-PL pl-PL Polish (Poland) pt pt-BR Portuguese pt-BR pt-BR Portuguese (Brazil) pt-PT pt-PT Portuguese (Portugal) quz-BO quz-BO Quechua (Bolivia) quz-EC quz-EC Quechua (Ecuador) quz-PE quz-PE Quechua (Peru) ro ro-RO Romanian ro-RO ro-RO Romanian (Romania) ru ru-RU Russian ru-RU ru-RU Russian (Russia) sa sa-IN Sanskrit sa-IN sa-IN Sanskrit (India) se-FI se-FI Sami (Northern) (Finland) se-NO se-NO Sami (Northern) (Norway) se-SE se-SE Sami (Northern) (Sweden) sk sk-SK Slovak sk-SK sk-SK Slovak (Slovakia) sl sl-SI Slovenian sl-SI sl-SI Slovenian (Slovenia) sma-NO sma-NO Sami (Southern) (Norway) sma-SE sma-SE Sami (Southern) (Sweden) smj-NO smj-NO Sami (Lule) (Norway) smj-SE smj-SE Sami (Lule) (Sweden) smn-FI smn-FI Sami (Inari) (Finland) sms-FI sms-FI Sami (Skolt) (Finland) sq sq-AL Albanian sq-AL sq-AL Albanian (Albania) sr sr-Latn-CS Serbian sr-Cyrl-BA sr-Cyrl-BA Serbian (Cyrillic) (Bosnia and Herzegovina) sr-Cyrl-CS sr-Cyrl-CS Serbian (Cyrillic, Serbia) sr-Latn-BA sr-Latn-BA Serbian (Latin) (Bosnia and Herzegovina) sr-Latn-CS sr-Latn-CS Serbian (Latin, Serbia) sv sv-SE Swedish sv-FI sv-FI Swedish (Finland) sv-SE sv-SE Swedish (Sweden) sw sw-KE Kiswahili sw-KE sw-KE Kiswahili (Kenya) syr syr-SY Syriac syr-SY syr-SY Syriac (Syria) ta ta-IN Tamil ta-IN ta-IN Tamil (India) te te-IN Telugu te-IN te-IN Telugu (India) th th-TH Thai th-TH th-TH Thai (Thailand) tn-ZA tn-ZA Tswana (South Africa) tr tr-TR Turkish tr-TR tr-TR Turkish (Turkey) tt tt-RU Tatar tt-RU tt-RU Tatar (Russia) uk uk-UA Ukrainian uk-UA uk-UA Ukrainian (Ukraine) ur ur-PK Urdu ur-PK ur-PK Urdu (Islamic Republic of Pakistan) uz uz-Latn-UZ Uzbek uz-Cyrl-UZ uz-Cyrl-UZ Uzbek (Cyrillic, Uzbekistan) uz-Latn-UZ uz-Latn-UZ Uzbek (Latin, Uzbekistan) vi vi-VN Vietnamese vi-VN vi-VN Vietnamese (Vietnam) xh-ZA xh-ZA Xhosa (South Africa) zh-CN zh-CN Chinese (People&amp;#39;s Republic of China) zh-HK zh-HK Chinese (Hong Kong S.</description></item><item><title/><link>https://andron13.de/school/frontend/html/16-html-img-picture-figure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/html/16-html-img-picture-figure/</guid><description> https://habr.com/ru/company/vdsina/blog/555736/ https://developer.mozilla.org/ru/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images https://developer.mozilla.org/ru/docs/Web/HTML/Element/img https://developer.mozilla.org/ru/docs/Web/HTML/Element/picture https://developer.mozilla.org/ru/docs/Web/HTML/Element/source https://developer.mozilla.org/ru/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/00js/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/00js/</guid><description>https://github.com/rolling-scopes-school/tasks/tree/master/stage1/modules/functions
https://github.com/rolling-scopes-school/tasks/tree/master/stage0/modules/js-fe-developer</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/01-js-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/01-js-intro/</guid><description>JavaScript # Существуют реально сотни видео и уже наверное тысячи статей, которые называются &amp;ldquo;JavaScript - введение&amp;rdquo; или &amp;lsquo;JavaScript - introduction&amp;rsquo;. Подошла и моя очередь помочь вам &amp;ldquo;ВОЙТИ В АЙТИ&amp;rdquo; через JS. Я сторонник американского метода ´Learning-by-doing´ и мы уже начали. Выше я использовал двойные кавычки, одинарные кавычки и кавычки которые кто как только не называет: обратные кавычки, backtick(англ), машинописный обратный апостроф, гравис, Invertierte Hochkommas bzw. rückwärts geneigte Hochkommas(нем), &amp;ldquo;ну вот эти кавычки как их&amp;rdquo;.</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/02-js-number/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/02-js-number/</guid><description>Числа в JavaScript: number # Числа в JS используют тип данных number.
let a, b, c; a = 5; b = 6; c = a + b; console.log(&amp;#34;c&amp;#34;, c); Достаточно очевидная операция:
Создаём три переменные. А именно декларируем a,b,c; По очереди инициализируем их. Переменной A присваиваем значение 5, переменной B значение 6. А переменную C мы инициализируем суммой A и B. Нам доступны привычные арифметические операторы и операторы сравнения:</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/03-js-function-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/03-js-function-intro/</guid><description>Функции в JavaScript # Шахматы и зёрна # Есть такая легенда про зёрна на шахматной доске. О ней можно почитать в Википедии здесь. Суть задачи найти количество зерён и выразить это на компьютерном языке.
Давайте решим задачу математически или вернее рассмотри сразу ответ. Сколько зёрен надо?
Сколько будет 2 в 64 степени? # 2 в 64 степени = 18 446 744 073 709 551 616 То есть: 18 квинтиллионов 446 квадриллионов 744 триллиона 073 миллиарда 709 миллионов 551 тысяча 616 (2^64 - 1) ответ про зёрна на шахматной доске Типичное решение задачи в JavaScript # let result = Math.</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/04-js-switch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/04-js-switch/</guid><description>function myFirstSwitch(оценкаВЧетверти) { let награда; switch (оценкаВЧетверти) { case 5: награда = &amp;#34;Велосипед&amp;#34;; break; case 4: награда = &amp;#34;GoPro4&amp;#34;; break; case 3: награда = &amp;#34;Награды не будет&amp;#34;; break; case 2: награда = &amp;#34;Потерянный час времени и плохое настроение&amp;#34;; break; case 1: награда = &amp;#34;Лучше не спрашивайте&amp;#34;; break; default: награда = &amp;#34;Такой оценки не существует&amp;#34;; break; } return награда; } console.log(myFirstSwitch(4)); https://learn.javascript.ru/switch
https://i.imgur.com/8FDkm5u.png https://www.udemy.com/course/the-complete-javascript-course/learn/lecture/22648197#overview
Сравнение иф и елс https://www.udemy.com/course/the-complete-javascript-course/learn/lecture/22648197#overview
https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Statements https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Statements/if...else</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/05-js-boolean-logical-operators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/05-js-boolean-logical-operators/</guid><description>Логические (булевые) переменные и операторы логики # Таблица истинности # a b a &amp;amp;&amp;amp; b a || b ! a false false false false true false true false true true true false false true false true true true true false Давайте представим себе пример из жизни: мы ищем на сайте все статьи, которые мы опубликовали и комментировали.</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/06-js-function-basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/06-js-function-basics/</guid><description>Функции важные основы # Иногда шутят, что программист это создание, которое принимает на input чашки кофе и выводит на output страницы кода.
Давайте напишем программу для кофемашины, что бы готовить программистское топливо. Программа для чая
function makeTea() { console.log(&amp;#34;Делаю чай&amp;#34;); } makeTea(); Программа для для горячей воды
function makeHotWatter() { console.log(&amp;#34;Кипяточек на подходе&amp;#34;); } makeHotWatter(); Для эспрессо
function makeEspresso() { console.log(&amp;#34;Ваш эспрессо, Сэр!&amp;#34;); } makeEspresso(); Для американо
function makeAmericano() { console.</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/07-js-if-else/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/07-js-if-else/</guid><description>Условный оператор if, if-else — введение в JavaScript # Иногда программисты печально шутят, что вся жизнь кодера состоит из написания различных if else и Switch команд. Отчасти так и есть. В фундаменте JS не так много команд. И одну из самых часто употребляемых мы сейчас изучим.
если, то Мы уже рассматривали оператор выбора Switch. Условный оператор IF имеет схожие функции и примерно те же цели. Основные отличия — в используемых условиях.</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/08-js-string/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/08-js-string/</guid><description>Символы, строки и работа с ними в JavaScript # Прямая речь, слова обращённые к пользователю, информация на сайте, заголовки статей, подписи к фотографиям — это всё в программировании называется строками — string.
JavaScript является в первую очередь языком фронтенда, той частью нашего веб-приложения, которую видит пользователь. По этому можно уверенно утверждать, что строки или string являются самой важной частью при изучении. Абсолютно всё крутится вокруг них, абсолютно везде мы работаем с текстом.</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/09-js-function-expressions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/09-js-function-expressions/</guid><description>Function Declaration и Function Expression # Повторяемые участки кода или код, который нам очень часто нужен есть смысл поместить в функции.
Функции бывают разные.
Выполняющие инструкции
function myLovelyLogger() { console.log(&amp;#34;Эту строчку кода написал Андрей&amp;#34;); } myLovelyLogger(); Возвращающие значение
function makeMeSandwich(хлеб, котлета, майонез) { // bread, cutlet, mayonnaise console.log(хлеб, котлета, майонез); let бутерброт = `${хлеб}хлеб и ${котлета}котлета сами по себе вкусны, но только ${майонез}майонез делает из них настоящий бутик!` return бутерброт; } makeMeSandwich(2, 1, &amp;#34;немножко&amp;#34;) Отличают функции и по способу описания</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/10-js-while-loop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/10-js-while-loop/</guid><description>#</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/100-js-projects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/100-js-projects/</guid><description># https://habr.com/ru/post/502300/ https://techrocks.ru/2020/02/20/9-projects-created-with-vanilla-javascript/
https://codepen.io/aquamarinedreams_/pen/zZWMQL
Главное для урока:
Прямая речь. js, nodejs, webapi ECMASCRIPT Number 52 bit, дробные и целые, нижние подчёркивания. Конвенция о наименованиях и нейминге. Лет, Вар, конст константы сложение, вычитание Вывод в консоль Решение задачи с BMI Alert, promt, confirm alert(&amp;#34;Hello&amp;#34;); result = prompt(title, [default]); result = confirm(question); // https://learn.javascript.ru/alert-prompt-confirm Функции function myLovelyFunction() { return 10; } Запуск функций, возврат значений. var Variable1 = &amp;#34;Hier erfolgt ein\&amp;#34;Anführungszeichen&amp;#34;; var Variable2 = &amp;#34;Hier erfolgt ein\\Backslash&amp;#34;; var Variable3 = &amp;#34;Hier erfolgt ein\nZeilenvorschub (Linefeed, LF)&amp;#34;; var Variable4 = &amp;#34;Hier erfolgt ein\rWagenrücklauf (Carriage Return, CR)&amp;#34;; var Variable5 = &amp;#34;Hier erfolgt ein\tTabulator&amp;#34;; var Variable6 = &amp;#34;Hier erfolgt ein\bBackspace&amp;#34;; var Variable7 = &amp;#34;Hier erfolgt ein\fSeitenvorschub (Formfeed, FF)&amp;#34;; var a = 1E1; var b = 1.</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/101-js-literatura/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/101-js-literatura/</guid><description>Литература для JavaScript # https://github.com/azat-io/you-dont-know-js-ru</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/102-js-modal-window/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/102-js-modal-window/</guid><description>https://habr.com/ru/post/519662/</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/103-js-bubblesort-and-big-o/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/103-js-bubblesort-and-big-o/</guid><description>https://metanit.com/web/javascript/4.2.php</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/11-js-do-while-loop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/11-js-do-while-loop/</guid><description>#</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/12-js-for-loop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/12-js-for-loop/</guid><description>#</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/13-js-arithmetic-operators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/13-js-arithmetic-operators/</guid><description># remainder operator</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/14-js-arrays/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/14-js-arrays/</guid><description>Массивы в JavaScript — введение в JavaScript # Давайте представим себе книжную полку на которой стоит множество книг. Или камеру хранения на вокзале со множеством ячеек. У каждой ячейки есть номер и в каждой из них может находиться чемодан.
Массив в реальной жизни - камера хранения В JavaScript тоже есть похожие &amp;ldquo;книжные полки&amp;rdquo; или &amp;ldquo;камеры хранения&amp;rdquo;. Называются они массивами и в массиве мы можем хранить множество переменных.</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/15-js-math-library/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/15-js-math-library/</guid><description>Библиотека Math в JavaScript # JS предоставляет часто требуемые математические константы и методы. Ознакомиться со всеми ими можно тут
Но давайте рассмотрим парочку из них:
Math.PI # Math.abs(x) # Math.sqrt(x) # Math.cbrt(x) # Math.cos(x) # Math.sin(x) # Math.tan(x) # Math.log(x) # Math.log10(x) # Math.log2(x) # Math.ceil(x) # Math.floor(x) # Math.round(x) # Math.random() # Math.max([x[, y[, …]]]) # Math.</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/17-history-of-js-and-strict-mode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/17-history-of-js-and-strict-mode/</guid><description># First version 10 day 1995-&amp;gt; 1996 -&amp;gt; 1996 Mocha -&amp;gt; LiveScript -&amp;gt; JavaScript
https://www.udemy.com/course/the-complete-javascript-course/learn/lecture/22648209#overview
JScript - Microsoft
ECMA 1997 ES1 ECMAScript
2009 ES5(Ecmascript5) 2015 ES6/ES2015 -ECMAScript 2015 -серьёзные изменения
https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Strict_mode</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/18-js-scope-and-hoisting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/18-js-scope-and-hoisting/</guid><description># https://metanit.com/web/javascript/3.6.php</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/19-js-label-continue-break-return/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/19-js-label-continue-break-return/</guid><description># https://professorweb.ru/my/javascript/js_theory/level1/1_6.php</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/20-js-ternary-operator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/20-js-ternary-operator/</guid><description># https://i.imgur.com/2G5BQ4f.png
https://www.udemy.com/course/the-complete-javascript-course/learn/lecture/22648205#overview</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/21-js-arrow-functions-basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/21-js-arrow-functions-basics/</guid><description>Стрелочная функция # Стрелочная функция это синтаксический сахар. То есть укороченная запись обычной функции.
Мы экономим на целом ключевом слове return, на ключевом слове function и фигурных, а порой и круглых скобках. С анонимными функциями надо подружиться. Она очень часто используется в коде.
Давайте посмотрим на примере: # Это нормальная запись функции нахождения квадрата числа. Или Function Declaration
function secondPower(x) { let result = x ** 2; return result; } console.</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/22-iife/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/22-iife/</guid><description>IIFE - Immediately Invoked Function Expression) # IIFE (Immediately Invoked Function Expression) это JavaScript функция, которая выполняется сразу же после того, как она была определена.
(function () { statements; })();</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/23-js-callback-function/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/23-js-callback-function/</guid><description/></item><item><title/><link>https://andron13.de/school/frontend/java-script/24-closure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/24-closure/</guid><description>https://metanit.com/web/javascript/3.3.php https://metanit.com/web/javascript/3.5.php</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/25-js-settimeout-and-event-loop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/25-js-settimeout-and-event-loop/</guid><description>Event Loop и setTimeout # А потом просто берёшь эту функцию и вызываешь её.
Если вы хоть раз пытались разобраться в какой-нибудь теме и просили помощь старшего товарища, то он наверняка употреблял вспомогательное слово просто.
Когда понимаешь суть, тогда действительно всё просто. Понять саму суть чаще всего далеко не просто.
Но давайте оставим разглогольствия и перейдём к очень важной и конечно же очень простой теме. Важная она потому, что на каждом собеседовании по JS мне задавали минимум один вопрос на понимание работы Event Loop или событийный цикл.</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/26-js-nested-loops/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/26-js-nested-loops/</guid><description>#</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/27-js-twodimensional-arrays/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/27-js-twodimensional-arrays/</guid><description>https://metanit.com/web/javascript/4.2.php https://coderoad.ru/53992415/%D0%9A%D0%B0%D0%BA-%D0%B7%D0%B0%D0%BF%D0%BE%D0%BB%D0%BD%D0%B8%D1%82%D1%8C-multidimensional-array-%D0%B2-javascript http://code.mu/ru/javascript/book/prime/multidimensionality/multi-arrays-filling/</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/29-js-forin-forof-foreach/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/29-js-forin-forof-foreach/</guid><description>https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%B4%D1%80%D0%BE%D0%B1%D0%BD%D0%BE-%D0%BF%D1%80%D0%BE-%D0%BC%D0%B5%D1%82%D0%BE%D0%B4-filter-%D0%B2-javascript-1fcb239a0d74
Как и с другими итеративными методами работы с массивами, такими как every(), some(), map() и forEach(), непосредственно callback() имеет следующую конструкцию: function callback(currentElement, index, array){ // &amp;hellip; }
https://medium.com/nuances-of-programming/%D1%85%D0%B2%D0%B0%D1%82%D0%B8%D1%82-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D1%8C-%D1%86%D0%B8%D0%BA%D0%BB%D1%8B-for-%D0%BF%D1%80%D0%B8-%D0%BF%D0%B5%D1%80%D0%B5%D0%B1%D0%BE%D1%80%D0%B5-%D0%BC%D0%B0%D1%81%D1%81%D0%B8%D0%B2%D0%BE%D0%B2-67cef76a43d6</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/30-js-heap-and-stack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/30-js-heap-and-stack/</guid><description>https://russianblogs.com/article/3150339121/</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/31-js-array-functions-sort-filter-map-reduce-some-every/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/31-js-array-functions-sort-filter-map-reduce-some-every/</guid><description>Массивы и методы для работы с ними: sort, filter, map, reduce, some, every &amp;hellip; # Мы уже рассматривали некоторые, базовые методы для работы с массивами при знакомстве с самими массивами в JavaScript. Настало время изучить ещё несколько очень полезных методов.
Это будет длинная статья. Изначально под каждый метод я хотел сделать отдельную статью, так как это сделано например на MDN.
Но при написании я понял, что у всех методов массива, которые я хотел рассмотреть есть как минимум две общие черты:</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/32-array-and-objects-functions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/32-array-and-objects-functions/</guid><description/></item><item><title/><link>https://andron13.de/school/frontend/java-script/33-js-bind-call-apply/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/33-js-bind-call-apply/</guid><description>call и apply
https://metanit.com/web/javascript/4.8.php</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/34-js-this/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/34-js-this/</guid><description>https://www.youtube.com/watch?v=gvicrj31JOM https://youtu.be/qg3EO56r76c?t=9193</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/35-js-spread-operator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/35-js-spread-operator/</guid><description>Rest parameter # https://www.udemy.com/course/pro-react-redux/learn/lecture/11378822#overview
https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Functions/Rest_parameters https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/Spread_syntax
https://www.udemy.com/course/pro-react-redux/learn/lecture/11729330#overview</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/36-js-destructuring-assignment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/36-js-destructuring-assignment/</guid><description>https://www.udemy.com/course/pro-react-redux/learn/lecture/11729330#overview</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/39-js-function-sort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/39-js-function-sort/</guid><description>Сорт
Лексикографическая сортировка
Как работает reduce() в JavaScript, когда его нужно применять и какие крутые вещи можно с ним делать
const euros = [29.76, 41.85, 46.5]; const sum = euros.reduce((total, amount) =&amp;gt; total + amount); sum // 118.11 var euros = [29.76, 41.85, 46.5]; var sum = euros.reduce( function(total, amount){ return total + amount }); sum // 118.11 const euros = [29.76, 41.85, 46.5]; const average = euros.reduce((total, amount, index, array) =&amp;gt; { total += amount; if( index === array.</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/40-js-function-filter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/40-js-function-filter/</guid><description>https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%B4%D1%80%D0%BE%D0%B1%D0%BD%D0%BE-%D0%BF%D1%80%D0%BE-%D0%BC%D0%B5%D1%82%D0%BE%D0%B4-filter-%D0%B2-javascript-1fcb239a0d74
Как и с другими итеративными методами работы с массивами, такими как every(), some(), map() и forEach(), непосредственно callback() имеет следующую конструкцию: function callback(currentElement, index, array){ // &amp;hellip; }</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/41-js-function-map/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/41-js-function-map/</guid><description>Map # https://stackoverflow.com/questions/14810506/map-function-for-objects-instead-of-arrays https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/map https://www.udemy.com/course/pro-react-redux/learn/lecture/11729330#overview</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/42-js-function-reduce/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/42-js-function-reduce/</guid><description>Как работает reduce() в JavaScript, когда его нужно применять и какие крутые вещи можно с ним делать
const euros = [29.76, 41.85, 46.5]; const sum = euros.reduce((total, amount) =&amp;gt; total + amount); sum // 118.11 var euros = [29.76, 41.85, 46.5]; var sum = euros.reduce( function(total, amount){ return total + amount }); sum // 118.11 const euros = [29.76, 41.85, 46.5]; const average = euros.reduce((total, amount, index, array) =&amp;gt; { total += amount; if( index === array.</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/43-js-function-some/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/43-js-function-some/</guid><description>Как работает reduce() в JavaScript, когда его нужно применять и какие крутые вещи можно с ним делать
const euros = [29.76, 41.85, 46.5]; const sum = euros.reduce((total, amount) =&amp;gt; total + amount); sum // 118.11 var euros = [29.76, 41.85, 46.5]; var sum = euros.reduce( function(total, amount){ return total + amount }); sum // 118.11 const euros = [29.76, 41.85, 46.5]; const average = euros.reduce((total, amount, index, array) =&amp;gt; { total += amount; if( index === array.</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/44-js-function-every/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/44-js-function-every/</guid><description>Как работает reduce() в JavaScript, когда его нужно применять и какие крутые вещи можно с ним делать
https://github.com/andron13/basic-js/blob/master/src/recursive-depth.js https://github.com/andron13/basic-js/blob/master/src/st-mac-address.js</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/48-js-nullish-coalescing-operator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/48-js-nullish-coalescing-operator/</guid><description># https://stasonmars.ru/javascript/kak-ispolzovat-nullish-coalescing-v-javascript/</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/49-js-currying/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/49-js-currying/</guid><description>Введение в каррирование в JavaScript # Если вдруг название шаблона покажется вам несколько странным, то каррирование названо в честь Хаскелла Карри, который работал над математическими основами функционального программирования.
код - 1000-currying-test.js
var greet = function(greeting, name) { console.log(greeting + &amp;#34;, &amp;#34; + name); }; greet(&amp;#34;Hello&amp;#34;, &amp;#34;Heidi&amp;#34;); //&amp;#34;Hello, Heidi&amp;#34; Наше первое карри
var greetCurried = function(greeting) { return function(name) { console.log(greeting + &amp;#34;, &amp;#34; + name); }; }; var greetHello = greetCurried(&amp;#34;Hello&amp;#34;); greetHello(&amp;#34;Heidi&amp;#34;); //&amp;#34;Hello, Heidi&amp;#34; greetHello(&amp;#34;Eddie&amp;#34;); //&amp;#34;Hello, Eddie&amp;#34; greetCurried(&amp;#34;Hi there&amp;#34;)(&amp;#34;Howard&amp;#34;); //&amp;#34;Hi there, Howard&amp;#34; // demo http://jsbin.</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/50-modul%D0%B5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/50-modul%D0%B5/</guid><description>https://metanit.com/web/javascript/3.9.php</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/51-js-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/51-js-testing/</guid><description>#</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/52-js-constructor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/52-js-constructor/</guid><description># https://metanit.com/web/javascript/4.5.php</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/53-js-this/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/53-js-this/</guid><description>https://www.udemy.com/course/the-complete-javascript-course/learn/lecture/22648275#overview https://metanit.com/web/javascript/4.10.php</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/54-js-get-set/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/54-js-get-set/</guid><description>https://metanit.com/web/javascript/4.7.php https://webdevblog.ru/inkapsulyaciya-v-javascript/ https://myrusakov.ru/js-encapsulation.html
https://habr.com/ru/post/17613/
MyObject = { id : 1, name : &amp;#34;Sample&amp;#34;, boolval : true, getName : function() { return this.name; } }</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/55-js-prototipy-nasledovanieje/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/55-js-prototipy-nasledovanieje/</guid><description>https://itchief.ru/javascript/objects https://metanit.com/web/javascript/4.6.php</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/56-copy-of-objects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/56-copy-of-objects/</guid><description>https://metanit.com/web/javascript/4.13.php</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/57-hasownproperty/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/57-hasownproperty/</guid><description>https://metanit.com/web/javascript/4.3.php</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/58-function-objects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/58-function-objects/</guid><description>Объекты в функциях https://metanit.com/web/javascript/4.4.php</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/60-inheritanse-%D0%BD%D0%B0%D1%81%D0%BB%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/60-inheritanse-%D0%BD%D0%B0%D1%81%D0%BB%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5/</guid><description>https://metanit.com/web/javascript/4.9.php</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/61-class/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/61-class/</guid><description/></item><item><title/><link>https://andron13.de/school/frontend/java-script/62-%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82-date%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0-%D1%81-%D0%B4%D0%B0%D1%82%D0%B0%D0%BC%D0%B8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/62-%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82-date%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0-%D1%81-%D0%B4%D0%B0%D1%82%D0%B0%D0%BC%D0%B8/</guid><description>https://metanit.com/web/javascript/5.1.php</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/62-%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82-math%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5-%D0%BE%D0%BF%D0%B5%D1%80%D0%B0%D1%86%D0%B8%D0%B8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/62-%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82-math%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5-%D0%BE%D0%BF%D0%B5%D1%80%D0%B0%D1%86%D0%B8%D0%B8/</guid><description>Math # Math.trunc() Функция Math.trunc() возвращает целую часть числа путём удаления всех дробных знаков.</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/63-%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82-array%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0-%D1%81-%D0%BC%D0%B0%D1%81%D1%81%D0%B8%D0%B2%D0%B0%D0%BC%D0%B8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/63-%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82-array%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0-%D1%81-%D0%BC%D0%B0%D1%81%D1%81%D0%B8%D0%B2%D0%B0%D0%BC%D0%B8/</guid><description>https://metanit.com/web/javascript/5.3.php</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/64-%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82-number/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/64-%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82-number/</guid><description/></item><item><title/><link>https://andron13.de/school/frontend/java-script/65-%D1%81%D1%82%D1%80%D0%BE%D0%BA%D0%B8-%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82-string-%D0%B8-%D0%B5%D0%B3%D0%BE-%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/65-%D1%81%D1%82%D1%80%D0%BE%D0%BA%D0%B8-%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82-string-%D0%B8-%D0%B5%D0%B3%D0%BE-%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B/</guid><description/></item><item><title/><link>https://andron13.de/school/frontend/java-script/66-%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD%D1%8B-%D1%81%D1%82%D1%80%D0%BE%D0%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/66-%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD%D1%8B-%D1%81%D1%82%D1%80%D0%BE%D0%BA/</guid><description/></item><item><title/><link>https://andron13.de/school/frontend/java-script/67-regex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/67-regex/</guid><description>https://metanit.com/web/javascript/6.2.php</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/68-yield/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/68-yield/</guid><description/></item><item><title/><link>https://andron13.de/school/frontend/java-script/69-set-map/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/69-set-map/</guid><description/></item><item><title/><link>https://andron13.de/school/frontend/java-script/70-js-html-canvas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/70-js-html-canvas/</guid><description>#</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/80-color/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/80-color/</guid><description># https://en.wikipedia.org/wiki/ANSI_escape_code#Colors https://stackoverflow.com/questions/9781218/how-to-change-node-jss-console-font-color/41407246#41407246</description></item><item><title/><link>https://andron13.de/school/frontend/java-script/capturing-phase-and-bubbling-stage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/java-script/capturing-phase-and-bubbling-stage/</guid><description>Полезные ссылки # https://learn.javascript.ru/bubbling-and-capturing</description></item><item><title/><link>https://andron13.de/school/frontend/js-dom/01-bom-dom-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/js-dom/01-bom-dom-intro/</guid><description>https://metanit.com/web/javascript/7.1.php https://medium.com/@reettikgoswami97/document-object-model-dom-c19d66abd235
Rotate не очень понятно # https://sebhastian.com/javascript-rotate-images/
https://metanit.com/web/javascript/7.6.php
textContent # DOM, BOM, CCSOM навигация по DOM использование селекторов для поиска элементов тэг, тип, содержимое элементов аттрибуты и свойства элементов изменение элементов стили и класс элементов в JS размеры и координаты элементов прокрутка элементов и окна
https://github.com/rolling-scopes-school/tasks/tree/master/stage1/modules/dom-api</description></item><item><title/><link>https://andron13.de/school/frontend/js-dom/02-dom-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/js-dom/02-dom-intro/</guid><description>DOM #</description></item><item><title/><link>https://andron13.de/school/frontend/js-dom/24-dom-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/js-dom/24-dom-api/</guid><description># https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API https://developer.mozilla.org/ru/docs/Web/API/Document_Object_Model/Introduction https://developer.mozilla.org/ru/docs/Web/API/Document_Object_Model https://medium.com/jspoint/understanding-basics-of-dom-265b73d958d1 https://metanit.com/web/javascript/7.1.php https://frontender.info/dom/ https://ru.wikipedia.org/wiki/Document_Object_Model https://www.w3.org/TR/DOM-Level-2-Core/introduction.html
https://habr.com/ru/company/macloud/blog/557422/ https://itchief.ru/javascript/dom
https://stasonmars.ru/javascript/kak-rabotaet-delegirovanie-sobityi-v-javascript/</description></item><item><title/><link>https://andron13.de/school/frontend/js-dom/locale-storage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/js-dom/locale-storage/</guid><description>https://stasonmars.ru/javascript/kak-rabotat-s-localstorage-v-javascript/</description></item><item><title/><link>https://andron13.de/school/frontend/js-portfolio-projects/00-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/js-portfolio-projects/00-intro/</guid><description>Полезные ссылки # https://github.com/strongdan/beginner-js-projects https://github.com/florinpop17/app-ideas https://github.com/tastejs/awesome-app-ideas
говно советы # Создай игру 21 Создай магазин пиццы типа додо Создай туду на реакте Создай туду с помощью redux Создай туду с помощью mobx Создай что нибудь на react-native Посмотри разные технологии, можно даже typescript попробовать Это же для накачки скилла, плюс если это для резюме работодатель увидит что разные технологии щупал
сделать петпроект # Попробуйте написать клиента для pets-api: https://github.</description></item><item><title/><link>https://andron13.de/school/frontend/links/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/links/</guid><description>Интересные ссылки # Уроки и домашнее задание Интересные тренажёры Ссылки на дизайны интерактивные Онлайн тренажёры Очень хорошие задачи по HTML оченькрутое</description></item><item><title/><link>https://andron13.de/school/frontend/react/00-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/react/00-intro/</guid><description>Подготовка к реакту # Полезные материалы # Анонимные функции, Замыкания, Лямбда # https://qna.habr.com/q/218083 https://developer.mozilla.org/ru/docs/Web/JavaScript/Closures https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Functions/Arrow_functions // Замыкание function init() { var name = &amp;#34;Mozilla&amp;#34;; // name - локальная переменная, созданная в init function displayName() { // displayName() - внутренняя функция, замыкание alert(name); // displayName() использует переменную, объявленную в родительской функции } displayName(); } init(); Полезные видео # Сборка вопросов к собеседованию # HTML, CSS # JS # https://qastack.</description></item><item><title/><link>https://andron13.de/school/frontend/react/20-react-how-to-create-unique-keys-for-react-elements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/react/20-react-how-to-create-unique-keys-for-react-elements/</guid><description>https://stackoverflow.com/questions/39549424/how-to-create-unique-keys-for-react-elements</description></item><item><title/><link>https://andron13.de/school/frontend/resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/resources/</guid><description>Полезные ресурсы и инструменты для изучения фронтенда # Тренажёры # https://htmlacademy.ru/courses https://www.freecodecamp.org/learn/responsive-web-design/#basic-css https://www.smashingmagazine.com/2021/09/interactive-learning-tools-front-end-developers/ https://js.coderslang.com/ https://hyperskill.org/tracks/5 https://academy.yandex.ru/posts/podborka-igr-i-trenazherov-dlya-nachinayuschikh-razrabotchikov-interfeysov https://www.pixact.ly/ https://www.ozaria.com/ https://gridcritters.com/ Flex https://flexboxfroggy.com/ https://nisnom.com/onlajn-generatory/</description></item><item><title/><link>https://andron13.de/school/frontend/typescript/%D0%BF%D0%B5%D1%80%D0%B2%D1%8B%D0%B5%D0%B7%D0%B0%D0%BC%D0%B5%D1%82%D0%BA%D0%B8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/typescript/%D0%BF%D0%B5%D1%80%D0%B2%D1%8B%D0%B5%D0%B7%D0%B0%D0%BC%D0%B5%D1%82%D0%BA%D0%B8/</guid><description>TypeScript # https://youtu.be/nyIpDs2DJ_c npm install -g typescript tsc filename.ts let variable: any = 42; Never ??? type интерфейсы https://youtu.be/nyIpDs2DJ_c?t=1367 https://youtu.be/nyIpDs2DJ_c?t=1939 интерфейсы стилей с указателем</description></item><item><title/><link>https://andron13.de/school/frontend/xml_svg/01-xml-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/xml_svg/01-xml-intro/</guid><description>https://habr.com/ru/post/260645/
https://developer.mozilla.org/ru/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web
https://webformyself.com/optimizaciya-svg-dlya-veb/
https://codepen.io/team/css-tricks/pen/yebOYp https://codepen.io/kanishkkunal/pen/LEPJda https://superdevresources.com/color-inline-svg-css/ https://developer.mozilla.org/ru/docs/Web/SVG/Tutorial/Fills_and_Strokes</description></item><item><title/><link>https://andron13.de/school/frontend/xml_svg/02-xml-svg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/frontend/xml_svg/02-xml-svg/</guid><description>SVG # &amp;lt;svg height=&amp;#34;100&amp;#34; width=&amp;#34;100&amp;#34; xmlns=&amp;#34;http://www.w3.org/2000/svg&amp;#34;&amp;gt; &amp;lt;circle cx=&amp;#34;50&amp;#34; cy=&amp;#34;50&amp;#34; r=&amp;#34;40&amp;#34; stroke=&amp;#34;yellow&amp;#34; stroke-width=&amp;#34;3&amp;#34; fill=&amp;#34;blue&amp;#34;/&amp;gt; &amp;lt;/svg&amp;gt;</description></item><item><title/><link>https://andron13.de/school/git/git-squash/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/git/git-squash/</guid><description>https://medium.com/nuances-of-programming/%D0%BA%D0%B0%D0%BA-%D1%81%D0%B6%D0%B8%D0%BC%D0%B0%D1%82%D1%8C-%D0%BA%D0%BE%D0%BC%D0%BC%D0%B8%D1%82%D1%8B-%D0%B2-git-%D1%81-%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C%D1%8E-git-squash-8a84b9f62734</description></item><item><title/><link>https://andron13.de/school/hidden/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/hidden/</guid><description>https://www.codewars.com/?language=javascript
This page is hidden in menu # Quondam non pater est dignior ille Eurotas # Latent te facies # Lorem markdownum arma ignoscas vocavit quoque ille texit mandata mentis ultimus, frementes, qui in vel. Hippotades Peleus pennas conscia cuiquam Caeneus quas.
Pater demittere evincitque reddunt Maxime adhuc pressit huc Danaas quid freta Soror ego Luctus linguam saxa ultroque prior Tatiumque inquit Saepe liquitur subita superata dederat Anius sudor Cum honorum Latona # O fallor in sustinui iussorum equidem.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/020-java-varargs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/020-java-varargs/</guid><description>Variable arguments - Varargs — введение в Java 020 # Давайте сложим два числа:
public class Main { public static void main(String[] args) { sum(2, 3); } private static int sum(int a, int b) { return a + b; } } Удобно находить сумму, но не очень. Ведь если надо найти сумму трёх чисел, надо писать другой метод:
public class Main { public static void main(String[] args) { sum(2, 3, 5); } private static int sum(int a, int b, int c) { return a + b + c; } } А если надо найти сумму трёх чисел?</description></item><item><title/><link>https://andron13.de/school/java/basic-course/022-java-public-static-void-main/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/022-java-public-static-void-main/</guid><description>Что же это такое — public static void main(String[] args) — введение в Java 022 # Давайте попробуем приподнять завесу тайны с метода, который мы писали чаще всего. Надо всё-таки понимать хоть немного, то что мы пишем.
Мы уже знаем, что такое main - точка входа в нашу программу. Мы знаем что такое void - это просто метод который выполняет код. Пришло время понять, что мы знаем, что String[] args это просто переменная args, которая является строковым массивом.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/023-java-return-break-continue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/023-java-return-break-continue/</guid><description>Операторы перехода break, continue, return — введение в Java 023 # Оператор break # пример работы оператора break С оператором break мы познакомились в шестом уроке во время знакомства с оператором выбора Switch. С помощью break мы выходим из вариантов выбора.
Прерывание цикла # С помощью break можно выходить из цикла.
public static void searchFor () { for (int i = 0; i &amp;lt;= 20; i++) { if (i == 4) { break; // выйти из цикла при i равной 4.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/026-java-magic-color/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/026-java-magic-color/</guid><description>https://github.com/tel-ran-de/BC14MorningJava/blob/master/src/day18/MagicColorPrint.java</description></item><item><title/><link>https://andron13.de/school/java/basic-course/028-java-sorting-algorithms-02-coctail-and-comb-sort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/028-java-sorting-algorithms-02-coctail-and-comb-sort/</guid><description>Сортировка расчёской(Combsort) и сортировка перемешиванием(Cocktail sort) — введение в Java 028 # Обе сортировки базируются на пузырьковой сортировке и вносят в неё некоторые улучшения. По этому мы их и рассмотрим вместе. Давайте начнём с коктейльной сортировки.
Сортировка перемешиванием(Cocktail sort) # Cocktail sort Cocktail sort - шейкерная сортировка, двунаправленная, коктейльная, сортировка перемешиванием.
В пузырьковой сортировке мы проходимся раз за разом, от начала массива до его конца и проверяем попарные элементы и если надо меняем их местами.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/029-java-sorting-algorithms-03-insertionsort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/029-java-sorting-algorithms-03-insertionsort/</guid><description>Сортировка вставками - Insertion Sort — введение в Java 029 # Сортировка вставками - делит условно массив на две части. В левой собирается отсортированная часть, а из правой части берутся элементы и по очереди ставятся на своё место. Пожалуй, это самый близкий метод сортировки к обычному человеческому мышлению. Берём по одному и ставим на своё место.
Часто возникает вопрос, как можно узнать, что левая часть отсортирована? Давайте представим, что у нас есть полное собрание сочинений какого-нибудь политика.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/030-java-sorting-algorithms-04-shuttlesort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/030-java-sorting-algorithms-04-shuttlesort/</guid><description>Челночная сортировка (Shuttle Sort) — введение в Java 030 # (В разработке)
public class Shuttle { public static int[] shuttleSort(int[] array) { for (int i = 0; i &amp;lt; array.length - 1; i++) { // primary pass if (array[i] &amp;gt; array[i + 1]) { int j = i - 1; int temp = array[i + 1]; // small value to move back array[i + 1] = array[i]; while (j &amp;gt;= 0 &amp;amp;&amp;amp; array[j] &amp;gt; temp) { // go back array[j + 1] = array[j]; // shuttle values forward j = j - 1; } // end secondary pass array[j + 1] = temp; // insert small value further back } // else no secondary pass } // end all passes return array; } }</description></item><item><title/><link>https://andron13.de/school/java/basic-course/031-java-sorting-algorithms-05-quicksort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/031-java-sorting-algorithms-05-quicksort/</guid><description>Быстрая сортировка, сортировка Хоара - quicksort — введение в Java 031 # (В разработке)
import java.util.Arrays; public class QuickSort { public static void quickSort(int[] array, int low, int high) { if (array.length == 0) return; //завершить выполнение, если длина массива равна 0 if (low &amp;gt;= high) return;//завершить выполнение если уже нечего делить // выбрать опорный элемент int middle = low + (high - low) / 2; int opora = array[middle]; // разделить на подмассивы, который больше и меньше опорного элемента int i = low, j = high; while (i &amp;lt;= j) { while (array[i] &amp;lt; opora) { i++; } while (array[j] &amp;gt; opora) { j--; } if (i &amp;lt;= j) {//меняем местами int temp = array[i]; array[i] = array[j]; array[j] = temp; i++; j--; } } // вызов рекурсии для сортировки левой и правой части if (low &amp;lt; j) quickSort(array, low, j); if (high &amp;gt; i) quickSort(array, i, high); } public static void main(String[] args) { int[] x = {8, 0, 4, 7, 3, 7, 10, 12, -3}; System.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/032-java-sorting-algorithms-big-o/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/032-java-sorting-algorithms-big-o/</guid><description>Оценка сложности алгоритмов, или Что такое О(log n) — введение в Java 032 # Существует множество способов сортировки данных.
Например:
Пузырьковая сортировка - Bubble Sort
Сортировка перемешиванием, шейкерная сортировка, коктейльная сортировка Сортировка расчёской Сортировка выбором - Selection Sort
Сортировка вставками - Insertion Sort
Челночная сортировка - Shuttle Sort
Сортировка Шелла - Shell sort
Быстрая сортировка - quickSort</description></item><item><title/><link>https://andron13.de/school/java/basic-course/033-java-binary-tree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/033-java-binary-tree/</guid><description>Двоичное дерево — введение в Java 033 # Введение От выбора заветной пары джинсов из гардероба до выбора следующего фильма для просмотра с партнером, человеческая жизнь наполнена поиском вещей.
В то время как в повседневной жизни люди обычно ищут между несколькими, если не дюжиной вещей. Компьютерам приходится иметь дело с поиском по данным сравнительно больших объемов по их размеру и количеству.
Это требует от компьютера наличия эффективного метода для максимально эффективного поиска внутри своих массивов и коллекций.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/034-java-try-catch-finally/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/034-java-try-catch-finally/</guid><description>Exception — введение в Java 034 # Предположим, что пишем программу для кофеавтомата.
При выборе капучино, наш автомат собирает напиток из воды, кофе, молока. Мы же ему написали:
Возьми одну порцию воды Возьми одну порцию кофе Возьми порцию молока Сделай по рецепту кофе. Если одного из ингридиентов не будет, то автомат не сможет сделать кофе и возможно зависнет в ожидании ингредиентов или поломается и техник должен будет перезапускать его заново.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/035-java-creating-a-jar-file-/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/035-java-creating-a-jar-file-/</guid><description>JAR - Java Archive — введение в Java 035 # Приложения обычно делают, что бы они использовались. Java приложения обычно собираются в JAR-файл.
Думаю разумно уже сейчас узнать как собираются JAR приложения, потому что это совсем не сложно, ну и у JAR файлов есть один приятный бонус. Мы можем использовать их как собственную библиотеку.
Создание JAR # Давайте просто попробуем в IDEA создать наш JAR-файл.
Заходим в меню File -&amp;gt; Project Structure.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/036-java-ressourcen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/036-java-ressourcen/</guid><description>Ресурсы и умение ими пользоваться — введение в Java 036 # Мы немного оторвёмся от самого кодинга и осмотримся по сторонам.
Яве исполнилось четверть века и за эти годы появилось множество статей, книг, рефератор, полезных и конечно же бесполезных ресурсов. И в этом хаосе мы попробуем найти островки логики и порядка.
Сайт Oracle - именно там лежит официальная документация к языку. Им надо научиться пользоваться и научиться читать документацию.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/038-java-formatter-systemoutprintf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/038-java-formatter-systemoutprintf/</guid><description>https://www.youtube.com/watch?v=IVcagooE5y4&amp;list=PL71C6DFDDF73835C2&amp;index=18
https://www.youtube.com/watch?v=D8gDsYpPXjM&amp;list=PLt3ywM3Ql0gCnQE-wEamfyHq6W1UyyhkN&amp;index=21
17 i 18 widik
https://youtu.be/D8gDsYpPXjM?t=7100</description></item><item><title/><link>https://andron13.de/school/java/basic-course/039-java-function-method/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/039-java-function-method/</guid><description>Один из первых уроков. показать методы которые запускают друг друга</description></item><item><title/><link>https://andron13.de/school/java/exercises/08-exercises-java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/08-exercises-java/</guid><description>Массивы, введение — 08 # Заполните массив случайным числами и выведете максимальное, минимальное и среднее значение. Для генерации случайного числа используйте метод Math.random(), который возвращает значение в промежутке [0, 1]. Напишите программу, которая выводит на консоль простые числа в промежутке от [2, 100]. Используйте для решения этой задачи оператор &amp;ldquo;%&amp;rdquo; (остаток от деления) и циклы. Перевести String с именем и фамилией в массив Char. Внести все чётные цифры от нуля до 100 в массив int.</description></item><item><title/><link>https://andron13.de/school/java/exercises/21-exercises-java-additional-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/21-exercises-java-additional-01/</guid><description>Задачи от Евгения - факультатив фирмы ТелРан # Given a String with different braces, check if the order of braces is correct. Every next brace can be an opening brace or should close a previous opening brace. Given a long, check if it is a palindrom Given a string with capital letters, small letters and symbols, return a string with capital letters turned into small, ans small into capital.</description></item><item><title/><link>https://andron13.de/school/java/exercises/22-exercises-java-additional-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/22-exercises-java-additional-02/</guid><description>Неотсортированные задачи # Дан int массив с рядом чисел с шагом один. Найти отсутствующий элемент. В случае если всё на месте вернуть минус один. Решите задачу тремя разными способами. findElements([1, 2, 4, 5, 6]) -&amp;gt; 3 findElements([0, 1, 2, 3, 5, 6]) -&amp;gt; 4 findElements([0, 1, 2, 3, 4, 5]) -&amp;gt; -1 // you have a String array, for example {Petya, Kolya, Olya, Katya}. Write a method that will ask the user what is his name, if this name is in the array, then the method print: “Hello, name!</description></item><item><title/><link>https://andron13.de/school/java/exercises/solution/03-java-exercises-solution-string-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/solution/03-java-exercises-solution-string-01/</guid><description/></item><item><title/><link>https://andron13.de/school/java/exercises/solution/04-java-exercises-solution-string-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/solution/04-java-exercises-solution-string-02/</guid><description/></item><item><title/><link>https://andron13.de/school/java/exercises/solution/05-java-exercises-solution-string-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/solution/05-java-exercises-solution-string-03/</guid><description>Добрый вечер, String - трес. Решение # public class StringTresExercise { public static void main(String[] args) { System.out.println(countYZ(&amp;quot;fez day&amp;quot;)); // exp.2 System.out.println(countYZ(&amp;quot;day fez&amp;quot;)); // exp.2 System.out.println(countYZ(&amp;quot;day fyyyz&amp;quot;)); // exp.2 System.out.println(countYZ(&amp;quot;tel ran&amp;quot;)); // exp. 0 System.out.println(countYZ(&amp;quot;xyx,xzy&amp;quot;)); // exp. 1 System.out.println(countYZ(&amp;quot;London is the capital of Great Britain&amp;quot;)); // exp. 0 System.out.println(gHappy(&amp;quot;xxggxx&amp;quot;)); // exp. true System.out.println(gHappy(&amp;quot;xxgxx&amp;quot;)); // exp. false System.out.println(gHappy(&amp;quot;xxggyygxx&amp;quot;)); // exp. false } private static int countYZ(String s) { int wordsNumber = 0; for (int i = 1; i &amp;lt; s.</description></item><item><title/><link>https://andron13.de/school/java/exercises/solution/21-java-eugen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/solution/21-java-eugen/</guid><description>Задачи от Жени # Given a String with different braces, check if the order of braces is correct. Every next brace can be an opening brace or should close a previous opening brace. Given a long, check if it is a palindrom Given a string with capital letters, small letters and symbols, return a string with capital letters turned into small, ans small into capital. Symbols remain unchanged. public class Palindrom { // given a long, check if it is a palindrom public static void main(String[] args) { System.</description></item><item><title/><link>https://andron13.de/school/java/oop-course/000-plan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/000-plan/</guid><description>План курса OOP от andron13 # Создание объекта на примере машины, утки. Перегрузка методов - полиморфизм. Написание методов для массивов всех примитивных типов с использованием перегрузки: создание массива, добавление элемента, изменение элемента, удаление элемента, чтение элемента, сортировки массива. Конструкторы. Способы создания стрингов на примере. И показать персон и ссылки на объекты. Классы String, StringBuffer, StringBuilder Инкапсуляция. Гетеры, сеттеры, THIS, модификаторы доступа. Объекты на примере обычных дробей Наследование, модификаторы доступа Переопределение методов (@override) Абстракция.</description></item><item><title/><link>https://andron13.de/school/java/oop-course/00001-%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8-%D0%BF%D0%BE-%D1%82%D0%B5%D0%BC%D0%B0%D0%BC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/00001-%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8-%D0%BF%D0%BE-%D1%82%D0%B5%D0%BC%D0%B0%D0%BC/</guid><description>https://www.baeldung.com/java-string-immutable конструктор статик и не статик перегрузка методов (сделано) наследование
куча, стэк, стринг пул
полиморфизм https://habr.com/ru/post/37576/#:~:text=%D0%9F%D0%BE%D0%BB%D0%B8%D0%BC%D0%BE%D1%80%D1%84%D0%B8%D0%B7%D0%BC%20%E2%80%94%20%D0%BE%D0%B4%D0%BD%D0%B0%20%D0%B8%D0%B7%20%D1%82%D1%80%D0%B5%D1%85%20%D0%BE%D1%81%D0%BD%D0%BE%D0%B2%D0%BD%D1%8B%D1%85,%D1%8D%D1%82%D0%BE%2C%20%D0%BD%D0%B0%D0%B2%D0%B5%D1%80%D0%BD%D0%BE%2C%20%D0%B7%D0%B2%D1%83%D1%87%D0%B8%D1%82%20%D1%81%D0%BB%D0%BE%D0%B6%D0%BD%D0%BE.
http://java-online.ru/java-oop.xhtml
http://java-online.ru/hashcode.xhtml https://www.codeflow.site/ru/article/java-hashcode https://javarush.ru/groups/posts/1989-kontraktih-equals-i-hashcode-ili-kak-ono-vsje-tam https://javarush.ru/groups/posts/2179-metodih-equals--hashcode-praktika-ispoljhzovanija
https://javarush.ru/groups/posts/695-10-podskazok-po-pereopredeleniju-metoda-tostring-v-java-chastjh-1 https://www.examclouds.com/ru/java/java-core-russian/method-tostring
https://www.youtube.com/watch?v=YqBVgUh64Ks&amp;list=PLsyeobzWxl7oZ-fxDYkOToURHhMuWD1BK&amp;index=59
https://www.youtube.com/watch?v=r3GGV2TG_vw&amp;list=PL_c9BZzLwBRKIMP_xNTJxi9lIgQhE51rF
https://www.youtube.com/watch?v=uXMTq81jG7Y&amp;list=PL786bPIlqEjRDXpAKYbzpdTaOYsWyjtCX
https://www.youtube.com/watch?v=3lLNeYoH8rI&amp;list=PLPPIc-4tm3YQTMht0YV_kiNxhBQbCrj_Z
https://www.youtube.com/results?search_query=javabean+%D1%87%D1%82%D0%BE+%D1%8D%D1%82%D0%BE
https://www.youtube.com/watch?v=l8Fn_aM_Np4&amp;list=PLEd6LarmkKnWkeHqu9_ngkHN-AnWQD6VM
https://www.youtube.com/watch?v=NbMKlycSvq4&amp;list=PLrCZzMib1e9qUdn_LEm96Oee3RVb9Qmr_&amp;index=13
https://www.youtube.com/watch?v=ziOQ8wkmnSE&amp;list=PLAma_mKffTOSUkXp26rgdnC0PicnmnDak
https://www.youtube.com/watch?v=5gU2wrQnbJs</description></item><item><title/><link>https://andron13.de/school/java/oop-course/006-java-oop-tostring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/006-java-oop-tostring/</guid><description/></item><item><title/><link>https://andron13.de/school/java/oop-course/007-java-oop-upcasting-downcasting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/007-java-oop-upcasting-downcasting/</guid><description>В самое начало
https://youtu.be/pLsnVbyqM7s?t=1800</description></item><item><title/><link>https://andron13.de/school/java/oop-course/008-java-oop-wrapper/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/008-java-oop-wrapper/</guid><description>В самое начало
https://youtu.be/xX9uXe0WSzw?t=9753 https://youtu.be/pLsnVbyqM7s?t=7400
http://java-online.ru/java-lang-wrapper.xhtml
https://youtu.be/2tWu6DfTcvA?t=6714</description></item><item><title/><link>https://andron13.de/school/java/oop-course/009-java-oop-hashcode-equals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/009-java-oop-hashcode-equals/</guid><description>https://youtu.be/xX9uXe0WSzw?t=7952
https://youtu.be/pLsnVbyqM7s?t=3442</description></item><item><title/><link>https://andron13.de/school/java/oop-course/010-java-null/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/010-java-null/</guid><description>Что такое null # SOLID
цастинг https://youtu.be/n4Br89eAMP8?t=6210 https://youtu.be/n4Br89eAMP8?t=9221 https://youtu.be/bT1kgqEYRuA?t=2088
https://youtu.be/bT1kgqEYRuA?t=4852
https://youtu.be/woundOTuveg?t=1365
https://youtu.be/woundOTuveg?t=3970</description></item><item><title/><link>https://andron13.de/school/java/oop-course/013-java-oop-mutable-immutable-objects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/013-java-oop-mutable-immutable-objects/</guid><description>Mutable vs Immutable Objects https://www.interviewcake.com/concept/java/mutable</description></item><item><title/><link>https://andron13.de/school/java/oop-course/014-java-testing-junit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/014-java-testing-junit/</guid><description>JUnit - тестировние приложений в Java # В начале перед первым уроком я стоял перед выбором какую из &amp;ldquo;страшных&amp;rdquo; технологий, дать в самом начале и не говорить что они страшные. В итоге я решил, что Git та технология, которая даётся сложнее всего и в каждом уроке стоит немного уделять ему внимания. Потому что без написания код нельзя выучить методы работы с Git.
Однако существует ещё одна технология, которая невозможна сама по себе, она требует уже написанного кода.</description></item><item><title/><link>https://andron13.de/school/java/oop-course/015-java-oop-practical-methods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/015-java-oop-practical-methods/</guid><description>Глава, где мы попытаемся разобраться методами # Практическая реализация пройденного материала
Мы изучили процедурное(императивное) программирование и прошли уже пару глав объектно-ориентированного программирования. И это примерно то место, где мы должны сравнить и обобщить методы из одной парадигмы с другой. Есть ли между ними разница?
Если мы хотим найти сумму двух чисел, то в императивной парадигме метод выглядел примерно вот так:
public static int addition(int a, int b) { return a + b; } В ООП наш метод может выглядеть вот так:</description></item><item><title/><link>https://andron13.de/school/java/oop-course/016-java-oop-practical-arrays/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/016-java-oop-practical-arrays/</guid><description>Naming a Package и массивы объектов # Практическая реализация пройденного материала
Огромное количество теоретического материала с теоретическими примерами плохо усваиваемы.
Давайте попробуем это исправить.
Я создам новый проект:
project . +-- src | +-- de | +-- andron13 | +-- application | +-- LibraryApp.java | +-- dao | +-- Library.java | +-- data | +-- Book.java +-- .gitignore +-- readme.md В файл readme.md обычно пишут о чём проект, как его запустить и кто его делал.</description></item><item><title/><link>https://andron13.de/school/java/oop-course/017-java-oop-association-aggregation-composition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/017-java-oop-association-aggregation-composition/</guid><description>Association, Aggregation and Composition # В ООП(не только в Java) помимо наследования различают ещё три связи между объектами:
Ассоциация Агрегация Композиция Наследование Агрегация - Aggregation # Мы говорим об агрегации, когда объект может быть частью нескольких составных объектов(компонентов). В этом случае полученный объект агрегирован. Срок службы деталей может быть больше, чем срок службы агрегата.
Примером агрегации являются взаимоотношения между футбольной командой и ее игроками. Человек может играть в нескольких командах, и если команда распущена, обычно это не означает конец для ее бывших игроков.</description></item><item><title/><link>https://andron13.de/school/java/oop-course/018-java-oop-abstraction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/018-java-oop-abstraction/</guid><description>Абстрактные классы и методы в Java # Иногда наши родственные объекты, которые наследованы от одного базового класса имеют разный подход к реализации методов. И часто во всех дочерних классах метод нужно переопределить.
Одна из парадигм ООП - схожее объединять. И эта парадигма может объединить и разные методы. Пример разных методов есть у домашних животных. Лошадка скачет, собачка бежит, птичка летит, рыбка плывёт. Метод движения нам нужен, потому что мы должны прописать передачу целевых координат и задать движение объекта.</description></item><item><title/><link>https://andron13.de/school/java/oop-course/019-java-oop-interface/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/019-java-oop-interface/</guid><description>https://javarush.ru/groups/posts/1981-dlja-chego-v-java-nuzhnih-interfeysih</description></item><item><title/><link>https://andron13.de/school/java/oop-course/020-java-oop-comparator-comparable/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/020-java-oop-comparator-comparable/</guid><description>https://youtu.be/2tWu6DfTcvA?t=9835</description></item><item><title/><link>https://andron13.de/school/java/oop-course/024-java-oop-date/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/024-java-oop-date/</guid><description>Дата и время в Java # Прежде чем
Java и время: Пре
Date today = new Date(); System.out.println(today); Date dateStart = new Date(0); System.out.println(&amp;#34;dateStart &amp;#34; + dateStart); Date anotherDay = new Date(1_451_665_447_567L); System.out.println(&amp;#34;just anotherDay &amp;#34; + anotherDay); Date theEnd = new Date(Long.MAX_VALUE); System.out.println(theEnd); В итоге у нас получился вот такой вот класс, в котором мы поработали с некоторыми вариантами даты в Java.
import java.text.*; import java.time.*; import java.time.format.DateTimeFormatter; import java.</description></item><item><title/><link>https://andron13.de/school/java/oop-course/026-java-oop-arraylist/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/026-java-oop-arraylist/</guid><description>Java ArrayList - основы # При использовании массивов можно было заметить, что у них есть один минус - они конечны. Мы не можем расширить массив. При незапланированном увеличении элементов массива мы вынуждены создавать новый массив, так как массив не меняет своей длины.
Java предоставляет ArrayList, который решает эту и часть других ограничений обычного массива. Не надо считать эти ограничения массива его недостатками. Это просто особенности, которые надо учитывать.
На примере ниже можно посмотреть различия между способами хранения информации.</description></item><item><title/><link>https://andron13.de/school/java/oop-course/032-java-oop-enum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/032-java-oop-enum/</guid><description>enum Level { LOW, MEDIUM, HIGH } Level myVar = Level.MEDIUM; enum Level { LOW, MEDIUM, HIGH } public class MyClass { public static void main(String[] args) { Level myVar = Level.MEDIUM; switch(myVar) { case LOW: System.out.println(&amp;#34;Low level&amp;#34;); break; case MEDIUM: System.out.println(&amp;#34;Medium level&amp;#34;); break; case HIGH: System.out.println(&amp;#34;High level&amp;#34;); break; } } } https://mkyong.com/java/java-enum-example/ https://www.w3schools.com/java/java_enums.asp https://javarush.ru/groups/posts/1963-kak-ispoljhzovatjh-klass-enum
public enum Gender { M(1), W(2), D(3); private int gend; private Gender(int gend) { this.gend = gend; } public int getGend() { return gend; } } https://javarush.</description></item><item><title/><link>https://andron13.de/school/java/oop-course/037-java-object-chapter-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/037-java-object-chapter-2/</guid><description>А запомнить нам поможет, то, что String тоже пишется с большой буквы, но как исключение из всех объектов инициализируется по упрощённой формуле. Вернее может, а может и по новой:
String helloWorld = new String(&amp;#34;Hello Java World!&amp;#34;) https://www.baeldung.com/java-string-pool
/**
BC12-Morning
16 18 : 25 */ public class Test { public static void main(String[] args) { String a = &amp;ldquo;Андрей&amp;rdquo;; String b = new String(&amp;ldquo;Андрей&amp;rdquo;); String e = new String(&amp;ldquo;Андрей&amp;rdquo;); String newE = e; boolean c = a.</description></item><item><title/><link>https://andron13.de/school/java/oop-course/038-java-object-chapter-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/038-java-object-chapter-3/</guid><description>Три ноги на которых стоит Java # Наследование - inheritance. https://vertex-academy.com/tutorials/ru/pravila-nasledovaniya-v-java/ Инкапсуляция - encapsulation. Полиморфизм - polymorphism. перегрузка - overloading. overriding Инкапсуляция — ограничение доступа к составляющим объект компонентам (методам и переменным).
public class Person { private String name; private String firstName; public int age; public Person(String ln, String fn) { name = ln; firstName = fn; } public Person() { this(&amp;#34;Doe&amp;#34;, &amp;#34;John&amp;#34;); } public void setName(String ln, String fn) { name = ln; firstName = fn; } public String fullName() { return (name + &amp;#34; &amp;#34; + firstName); } } import java.</description></item><item><title/><link>https://andron13.de/school/java/oop-course/040-java-uml-diagram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/040-java-uml-diagram/</guid><description>https://www.youtube.com/watch?v=ksvwF2sUjHM&amp;list=PLBlnK6fEyqRjKA_NuK9mHmlk0dZzuP1P5&amp;index=120</description></item><item><title/><link>https://andron13.de/school/java/oop-course/042-java-maven/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/042-java-maven/</guid><description>Java и Apache Maven — фреймворк для автоматизации сборки проектов # В предыдущем уроке мы собрали свою библиотеку и говорили о сборке своего собственного приложения. Хотя ни одного приложения ещё и не сделали.
Представьте, что мы до сих пор собирали телескоп, что бы посмотреть на звёзды. И вот собрав его мы теперь можем изучать планеты, звёзды, луну, солнце. С чего начать?
Примерно перед таким же выбором стою и я. Вы выучили основы и вам можно рассказывать всё.</description></item><item><title/><link>https://andron13.de/school/java/oop-course/043-java-gradle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/043-java-gradle/</guid><description>Gradle - сборщик для Android &amp;amp; C # Мир программирования это мир конкуренции. Вопрос, почему придумали Gradle отвечается сам собой. Потому что програмисты тоже человеки. А человеки всегда находятся в поиске. И даже улучшение работы на пару процентов уже для многих может иметь решающее значение.
Gradle подходит к решению некоторых задач по другому чем Maven и активно используется многими фреймворками так же как и Maven на ваш выбор или даже безальтернативно - только Gradle.</description></item><item><title/><link>https://andron13.de/school/java/oop-course/050-bit-operation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/oop-course/050-bit-operation/</guid><description>https://javarush.ru/groups/posts/1925-pobitovihe-operacii
https://qna.habr.com/q/152931</description></item><item><title/><link>https://andron13.de/school/java/spring/001-java-spring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/spring/001-java-spring/</guid><description>https://www.youtube.com/watch?v=5ePo08sqcpk&amp;list=PLAma_mKffTOR5o0WNHnY0mTjKxnCgSXrZ</description></item><item><title/><link>https://andron13.de/school/job-interview/01-new/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/job-interview/01-new/</guid><description>Das Unterrichten ist mir sehr ans Herz gewachsen. Und unsere Schule selbst hat in diesem Jahr die Vorteile des Online-Lernformats entdeckt. Einsparung von Klassenzimmern. . Und wir arbeiten jetzt für ganz Deutschland, nicht nur für Berlin.
Ich muss zugeben, dass ich nicht glaube, dass wir in die Klassenzimmer zurückkehren werden. Und dass ich je in die Augen der Schüler wieder schauen kann.
Ohne sie geht für mich ein sehr wichtiger Teil der Kommunikation verloren.</description></item><item><title/><link>https://andron13.de/school/job-interview/bitingbit_com/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/job-interview/bitingbit_com/</guid><description>Русский # Я всегда интересовался техникой и с момента, как я смог себе купить первый компьютер я сразу оказался в интернете. Это было 25 лет назад.
И через 10 лет я уже не только подключал и настраивал компьютеры, но и делал людям сайты и занимался продвижением их бизнеса в интернете.
5 лет назад я решил поднять свои скилы и пошёл обучаться на фахинформатика. И последние три года я в образовании и консалтинге.</description></item><item><title/><link>https://andron13.de/school/job-interview/how-to-speak/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/job-interview/how-to-speak/</guid><description>https://ukbut.ru/pravilnyi-dialog-po-telefonu-pravila-obshcheniya-po-telefonu.html http://ptd-tver.ru/kodeks_etiki/standart_telefonnix_razgovorov https://works.doklad.ru/view/qbrfgsp6fgk.html https://4leader.com.ua/blog/prodazhi/22-pravila-telefonnogo-etiketa/ https://ienglish.ru/articles/common-article/telefonnui-etiket
https://www.absolventa.de/karriereguide/gespraech/tipps-telefoninterview#:~:text=Das%20Telefoninterview%20sollte%20im%20Idealfall,deinem%20Gespr%C3%A4chspartner%20wieder%20das%20Wort.</description></item><item><title/><link>https://andron13.de/school/job-interview/html-css-questions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/job-interview/html-css-questions/</guid><description>Вопросы на интервью # http://chm.org.ua/css-interview/ https://www.youtube.com/watch?v=4YRG6cMAASI
Для чего нужен doctype и сколько разновидностей вы можете назвать? В чем разница между standards mode и quirks mode? Как следует оформлять страницу, в которой контент может быть на разных языках? Что нужно иметь в виду при разработке многоязычных сайтов? Можно ли использовать синтаксис XHTML в HTML5? Как использовать XML в HTML5? Чем полезны data- атрибуты? Какие box-модели есть в HTML4 и есть ли отличия в HTML5?</description></item><item><title/><link>https://andron13.de/school/job-interview/js-questions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/job-interview/js-questions/</guid><description>https://forum.jscourse.com/t/javascript-html-css/1827 https://techrocks.ru/2021/01/08/javascript-job-interview-questions-middle-senior/</description></item><item><title/><link>https://andron13.de/school/job-interview/product-owner-fragen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/job-interview/product-owner-fragen/</guid><description>PO # Acceptance Criteria, Defenition of Ready и Defenition of Done
Запомни РО - это Value Maximizer - ты увеличиваешь ценность продукта всеми доступными способами дла конечного клиента Это значит что тебе надо знать чего хочет клиент, а это значит что надо говорить и/или “говорить” с клиентом; уметь определять-составлять Persona пользователя; что есть у конкурентов = анализ рынка и т.д. и Уметь приоретезировать задачи (MoSCoW, Cost of Delay, Value-Complexity Matrix - уже будет достаточно) и выставлять цели разработчикам Уметь писать User Stories (наиболее распространнёная формула As a &amp;lt; type of user &amp;gt; (тут лучше использовать User_Persona, но можно и User_Role, но лучше Персона - больше понимания и эмпатии), I want &amp;lt; some goal &amp;gt; so that &amp;lt; some reason &amp;gt; Читать на эту тему вот https://www.</description></item><item><title/><link>https://andron13.de/school/marketing/seo/02-sitemap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/marketing/seo/02-sitemap/</guid><description>https://www.riwa.ru/ - burger menu = карта сайта</description></item><item><title/><link>https://andron13.de/school/pm/100/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/pm/100/</guid><description>Работа преподавателей с группами в школе # Данная инструкция должна помочь вести одну группу учеников двумя преподавателями и ввести общие стандарты и требования как к ученикам, так и к учителям.
Базовое программирование # В базовом программировании мы даём сейчас HTML+CSS, Java и алгоритмы, Git.
Подробно пройдёмся по каждому предмету и начнём с Git.
Git # У каждой группы должен быть свой репозиторий с кодом, который был написан в классе.</description></item><item><title/><link>https://andron13.de/school/quality-assurance/01-test-or-dead/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/quality-assurance/01-test-or-dead/</guid><description># quality assurance https://habr.com/ru/company/mailru/blog/370153/
2**64 https://window-10.ru/2-v-64-stepeni-jeto-skolko-zeren/
https://www.popmech.ru/technologies/46176-top-6-katastrof-proizoshedshikh-po-vine-programmnogo-obespecheniya/
https://www.dw.com/ru/boeing-%D0%BF%D1%80%D0%B8%D0%B7%D0%BD%D0%B0%D0%BB-%D0%BD%D0%B0%D0%BB%D0%B8%D1%87%D0%B8%D0%B5-%D0%BE%D1%88%D0%B8%D0%B1%D0%BA%D0%B8-%D0%B2-%D0%B1%D0%BE%D1%80%D1%82%D0%BE%D0%B2%D0%BE%D0%B9-%D1%8D%D0%BB%D0%B5%D0%BA%D1%82%D1%80%D0%BE%D0%BD%D0%B8%D0%BA%D0%B5-%D0%BB%D0%B0%D0%B9%D0%BD%D0%B5%D1%80%D0%B0-737-max/a-48792541
https://copypast.ru/2010/02/15/10_khudshikh_oshibok_v_programmirovanii_v_istorii_chelovechestva.html
машины https://habr.com/ru/company/pvs-studio/blog/330762/</description></item><item><title/><link>https://andron13.de/school/tools/01-git/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/tools/01-git/</guid><description>Git # Не буду скрывать, Git это та технология, которая не так легко даётся.
Принципиально, написано достаточно книг, которые всё объясняют намного лучше, чем я когда либо смогу. Именно по этому я написал просто короткую инструкцию для начинающих , где описаны основные приказы, которые тебе понадобятся первое время.
Единственное, что я бы хотел добавить к книгам, которые вам всё равно обязательно надо прочитать, всего несколько предложений.
Git - это система контроля версий в разработке.</description></item><item><title/><link>https://andron13.de/school/tools/02-github-basic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/tools/02-github-basic/</guid><description>Методичка по работе с Git # Терминология # Термин Ссылка Пояснение Git https://git-scm.com/downloads Git - это очень популярная технология контроля версий, используемая при разработке програмного обеспечения и веб-приложений. Онлайн инструкция на русском языке - https://git-scm.com/book/ru/v2/ Github https://github.com/ Популярный сервис для хранения Git-репозиториев. С 2018 года принадлежит Microsoft Bitbucket https://bitbucket.org/ Популярный сервис для хранения Git-репозиториев. Принадлежит Atlassian и очень тесно интегрирован с популярными IT-приложениями этой фирмы как Trello или Jira Gitlab https://gitlab.</description></item><item><title/><link>https://andron13.de/school/tools/03-boolean-algebra/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/tools/03-boolean-algebra/</guid><description>Булева алгебра # Булева алгебра, ударение на первый слог. БУлева.
Программисты учат её в институте. Люди, которые не учились в институте должны будут понять её самостоятельно.
При этом всё не так уж и сложно.
Давайте я попробую на пальцах рассказать основы и то, что нам понадобится на минимальном уровне.
Дизъюнкция # Когда мама ИЛИ папа дают мне деньги на карманные расходы, то я бегу и покупаю себе мороженное.</description></item><item><title/><link>https://andron13.de/school/tools/05-postman/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/tools/05-postman/</guid><description>https://habr.com/ru/company/kolesa/blog/351250/
https://www.youtube.com/watch?v=bZE5hU5fZCY
https://www.software-testing.ru/library/testing/testing-automation/2958-testing-get-requests
https://geekbrains.ru/posts/kak-testirovat-api-ili-postman-dlya-chajnikov</description></item><item><title/><link>https://andron13.de/school/tools/06-docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/tools/06-docker/</guid><description>docker login docker logout docker run hello-world docker pull busybox docker images docker run busybox docker run busybox echo &amp;ldquo;hello from busybox&amp;rdquo; docker ps docker ps -a docker run -it busybox sh docker run &amp;ndash;help docker rm 7e5790795c19 docker rm $(docker ps -a -q -f status=exited) docker run &amp;ndash;rm docker rmi
docker run prakhar1989/static-site
detached mode. docker run -d -P &amp;ndash;name static-site prakhar1989/static-site e61d12292d69556eabe2a44c16cbd54486b2527e2ce4f95438e504afb7b02810
docker port static-site
docker run -p 8888:80 prakhar1989/static-site</description></item><item><title/><link>https://andron13.de/school/tools/chrome-devtools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/tools/chrome-devtools/</guid><description>Chrome DevTools # В данном модуле студентам необходимо изучить: # Вкладка Elements: нахождение HTML-элемента в DOM-дереве просмотр и динамическое(но временное) изменение HTML-структуры документа Просмотр и динамическое(но временное) изменение стилей DOM-элемента Нахождение в файле стилей (вкладка Source) определенного стиля Просмотр результирующих стилей, которые применились к HTML-элементу Вкладка Console: виды логов из js-файла, которые рендерятся во вкладке Сonsole - console.log(), console.info(), console,error(). переход из консоли в строку в файл скрипта(вкладка Source) к источнику лога.</description></item><item><title/><link>https://andron13.de/school/tools/ci-cd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/tools/ci-cd/</guid><description>https://habr.com/ru/post/498436/ https://marketplace.visualstudio.com/items?itemName=cschleiden.vscode-github-actions</description></item><item><title/><link>https://andron13.de/school/tools/clean-code-js/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/tools/clean-code-js/</guid><description>https://github.com/rolling-scopes-school/tasks/tree/master/stage2/modules/clean-code https://github.com/rolling-scopes-school/tasks/blob/master/tasks/cv/git-markdown.md</description></item><item><title/><link>https://andron13.de/school/tools/figma/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/tools/figma/</guid><description>https://github.com/rolling-scopes-school/tasks/tree/master/stage0/modules/figma</description></item><item><title/><link>https://andron13.de/school/tools/rest-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/tools/rest-api/</guid><description>https://www.youtube.com/watch?v=eFLH-vrJdVM https://github.com/rolling-scopes-school/tasks/tree/master/stage2/modules/restful-api
https://github.com/rolling-scopes-school/tasks/tree/master/stage2/modules/design-patterns
https://github.com/rolling-scopes-school/tasks/tree/master/stage2/modules/solid</description></item><item><title/><link>https://andron13.de/school/udemy/intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/udemy/intro/</guid><description>Курс рассчитан на тех кто: хочет &amp;ldquo;Войти в IT&amp;rdquo; и не обладает никакими дополнительными образованиями и знаниями компьютерных языков, ведёт свой бизнес online и хочет разобраться с проблемами, которые встают на его пути, копирайтеров, которые хотят развить свои умения и знания, начинающих программистов.</description></item><item><title>Диаграма Ганта</title><link>https://andron13.de/school/pm/05-gantt-chart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/pm/05-gantt-chart/</guid><description>Диаграма Ганта # Сетевая модель мала понятна. В наш век упрощения и визуализации сетевая модель плохо смотрится на слайдах поверпойнта.
С визуализацией наших планов хорошо справляется диаграма Ганта. Давайте сразу на примере её и сделаем.
Сайт # № Задача Начало Конец Время в днях 1 Составление технического здания 01.08.2021 02.08.2021 1 2 Прототипирование сайта 02.08.2021 03.08.2021 1 3 Создание графического макета 03.</description></item></channel></rss>