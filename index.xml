<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>блог берлинца со стажем on andron13</title><link>https://andron13.de/</link><description>Recent content in блог берлинца со стажем on andron13</description><generator>Hugo -- gohugo.io</generator><language>ru</language><lastBuildDate>Sun, 05 Jul 2020 19:41:02 +0200</lastBuildDate><atom:link href="https://andron13.de/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://andron13.de/school/html/01-html-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/html/01-html-intro/</guid><description>Веб-девелопмент — пособие для начинающих # Предисловие # Свой первый сайт я сделал ещё в 96-м году. Просто скопировав исходники с сайта модного компьютерного журнала и поставив их на свой. Принципиально это не самый плохой способ. Подсмотреть и сделать лучше. Что бы понять как это работает — просмотр чужих примеров просто обязателен.
Последние пару лет слово пример практически не используется в моём IT-круге. Принято говорить кейсы, кейс клиентa, пользовательский кейс.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/001-java-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/001-java-setup/</guid><description>HelloWorld.java — первая программа на Java — введение в Java 001 # Установка JDK # В интернете существуют тысячи инструкций по установке окружения для работы в Java.
Я уверен, что вы сможете вбить в Google запрос на английском: &amp;ldquo;How to Install Java Development Kit&amp;rdquo; или на русском: &amp;ldquo;Установка JDK&amp;rdquo;. Java принадлежит фирме Oracle и можно сразу скачать Java с её страниц, скачав просто JDK, скачав Netbeans вместе с JDK или скачав открытую AdoptOpenJDK (предпочтительнее для новичков).</description></item><item><title>У меня снова есть блог</title><link>https://andron13.de/posts/hello/</link><pubDate>Sun, 05 Jul 2020 19:41:02 +0200</pubDate><guid>https://andron13.de/posts/hello/</guid><description>Блогер это навсегда # Около 5 лет у меня не было блога. И вот у меня снова появилось желание, а мои возможности позволяют выбирать из большего, чем 10 лет назад.
Надеюсь до конца лета я смогу выложить свой курс введения в веб-программирование с первым языком обучения Java.
Проверьте сами, вдруг получилось. На секундочку, сам канал сделал ещё 4 года назад - 17.10.2016.
ночной берлин</description></item><item><title/><link>https://andron13.de/school/hidden/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/hidden/</guid><description>This page is hidden in menu # Quondam non pater est dignior ille Eurotas # Latent te facies # Lorem markdownum arma ignoscas vocavit quoque ille texit mandata mentis ultimus, frementes, qui in vel. Hippotades Peleus pennas conscia cuiquam Caeneus quas.
Pater demittere evincitque reddunt Maxime adhuc pressit huc Danaas quid freta Soror ego Luctus linguam saxa ultroque prior Tatiumque inquit Saepe liquitur subita superata dederat Anius sudor Cum honorum Latona # O fallor in sustinui iussorum equidem.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/002-java-integers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/002-java-integers/</guid><description>Простые типы данных — byte, short, int, long, в примерах — введение в Java 002 # Чтобы вызвать на экран что-то большее, чем &amp;ldquo;Привет, Мир!&amp;rdquo;, надо работать с числами, символами и буквами. Чтобы работать с ними в Java — надо научиться их хранить и передавать. Для этого нам надо познакомиться с понятием &amp;ldquo;типы данных&amp;rdquo;, а точнее &amp;ldquo;простые типы данных&amp;rdquo;.
Простые типы данных — Java Primitives # Существуют следующие базовые типы данных: byte, short, int, long, float, double, char, boolean и String (не совсем примитив, но базовый тип данных).</description></item><item><title/><link>https://andron13.de/school/java/basic-course/003-java-float-double/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/003-java-float-double/</guid><description>Типы данных с плавающей точкой: float и double — введение в Java 003 # Числа с плавающей точкой # Для хранения дробных чисел в Java используют float и double. Правильное название — простые (примитивные) типы данных с плавающей точкой. Примитивные типы данных — byte, short, int, long, которые являются целыми числами, — мы рассматривали - здесь.
число Пи Float # Давайте сразу рассмотрим практический пример:</description></item><item><title/><link>https://andron13.de/school/java/basic-course/004-java-char-string/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/004-java-char-string/</guid><description>Типы данных char и String: примеры применения — введение в Java 004 # Char # Таблица символов Если в программе нужны символы, то для этого мы пользуемся типом данных char. Например:
public class HelloChar { public static void main(String[] args) { char zahl = 100; // Сотый по счёту символ в таблице char octal = &amp;#39;\u039A&amp;#39;; // Вызов определённого символа кодом char zeichen = &amp;#39;A&amp;#39;; // Буква A char tabulator = &amp;#39;\t&amp;#39;; // В русском языке клавиша называется &amp;#34;Таб&amp;#34; // Табулятор char phi = &amp;#39;\u03A6&amp;#39;; // Греческая буквая Фита - PHI System.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/005-java-boolean/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/005-java-boolean/</guid><description>Тип данных boolean и логические операторы — введение в Java 005 # Правда или ложь Boolean # Boolean в Java — это логический тип данных. Переменная типа boolean может принимать всего два значения — это правда или ложь — true &amp;amp; false. Эти два значения обозначаются в других языках и часто выдаются на экран как 1 и 0, но всё же не равны этим значениям: например, выражение boolean b = 0; приведёт к ошибке при компиляции программы.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/006-java-switch-case/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/006-java-switch-case/</guid><description>Switch и Case: оператор выбора — введение в Java 006 # В этом уроке мы рассмотрим на примерах оператор выбора Switch и опции выбора Case.
Пример:
За пятёрку в четверти по математике папа обещал мне велосипед. За четвёрку в четверти по математике мама купит мне GoPro4. За тройку меня, наверное, не будут ругать. За двойку меня отругают. За единицу меня &amp;ldquo;убьют&amp;rdquo;. Опять двойка Типичный жизненный пример, который можно написать на Java:</description></item><item><title/><link>https://andron13.de/school/java/basic-course/007-java-if-else/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/007-java-if-else/</guid><description>Условный оператор if, if-else — 6введение в Java 007 # если, то В прошлом уроке я рассматривал оператор выбора Switch. Оператор IF имеет схожие функции и примерно те же цели. Основные отличия — в используемых условиях. Кстати, как обычно, верить мне необязательно: можно спросить у Google, например &amp;ldquo;java switch vs if сравнение&amp;rdquo;. Только на Хабре я нашёл несколько статей, рассматривающих эстетическую сторону вопроса, вопрос скорости, эффективности и вопрос используемых методов.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/008-java-modulo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/008-java-modulo/</guid><description>Modulo — модуль деления, введение в Java 008 # Modulo — в специализированной литературе &amp;ldquo;modulo&amp;rdquo; называется оператором деления по модулю или взятием модуля деления. В Java обозначается знаком &amp;ldquo;процентов&amp;rdquo; - %.
Используется это в программировании, например для перевода десятичных чисел в двоичные. Не надо путать этот оператор с делением &amp;ldquo;/&amp;rdquo;. Замечу, что в Википедии на данный момент по запросу modulo выводится статья про &amp;ldquo;деление с остатком&amp;rdquo; . На мой взгляд это очень сильно дезориентирующие определение.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/009-java-arithmetic-operators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/009-java-arithmetic-operators/</guid><description>Операторы в Java — введение в Java 009 # Мы уже использовали многое в наших программах не задумываясь. Например знаками знакомыми нам из школьной математики: +, -, = и др.. Пришло время узнать весь список доступных в Java операторов и применение.
Заранее скажу, что для введения в Java достаточно понимать первые две таблицы - арифметические операторы и операторы сравнения.
Арифметические операторы - arithmetic operators # Оператор Пример использования Пояснение + a + b Сложение - a - b Вычитание (также унарный минус) * a * b Умножение / a / b Деление % a % b Деление по модулю ++ Инкремент, а++ соотвествует а = а + 1 &amp;ndash; Декремент, а&amp;ndash; соотвествует а = а - 1 += a += b Сложение с присваиванием Выражение a += b эквивалентно значению a = a + b.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/010-java-for/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/010-java-for/</guid><description>Цикл FOR — введение в Java 010 # петля Каждый день я встаю в шесть утра и иду на завод к восьми, в семь вечера я уже снова дома, смотрю кино по телевизору, курю с соседом на лестничной клетке и в одиннадцать уже иду спать. Утром вторника повторяется всё то же самое, и в среду, и в четверг, и в пятницу.
Всё это можно описать, например, с помощью блока if else.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/011-java-methods-void-return/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/011-java-methods-void-return/</guid><description>Методы в Java немного подробнее: возвратные и исполняющие-введение в Java 011 # Главный метод класса # public static void main(String[] args) Каждый раз пишем эту магическую строку что бы запустить нашу программу. MAIN - обозначает точку входа в программу. Мы можем один раз написать этот метод в главном классе, например Main:
public class Main { public static void main(String[] args) { // просто тестирование } } Следующим методом мы можем написать метод сложения двух целых чисел.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/012-java-while-dowhile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/012-java-while-dowhile/</guid><description>Цикл While и Do While # Это самая лёгкая глава. Потому что цикл while — родной брат цикла for.
Пример:
public class WhileWeAreYoung { public static void main(String[] args){ int i = 0; while(i &amp;lt; 10){ System.out.println(i); i++; } } } Изученный цикл for мы бы написали так:
public static void main(String[] args) { for (int i = 0; i &amp;lt; 10 ; i++){ System.out.println(i); } } В цикле for стоит условие, и в while стоит условие.</description></item><item><title/><link>https://andron13.de/school/java/basic-course/013-java-scanner/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/013-java-scanner/</guid><description>Scanner # Я хочу ввести немного магии в наши программы. Мы уже пользовались и пользуемся для вывода результатов командой System.out.println(). Возможность ввода данных через терминал в программу также существует.
import java.util.Scanner; public class WhileScanner { public static void main(String[] args) { Scanner input = new Scanner(System.in); int old; System.out.println(&amp;#34;Сколько тебе лет? &amp;#34;); old = input.nextInt(); if (old &amp;gt;= 18){ System.out.println(&amp;#34;Ты можешь купить на вечер что-то более крепкое, чем чай&amp;#34;); break; // выход из цикла } } } Удачное ли использование цикла while в примере выше?</description></item><item><title/><link>https://andron13.de/school/java/basic-course/014-java-binary-and-decimal-issue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/basic-course/014-java-binary-and-decimal-issue/</guid><description>Двоичная, десятичная, восьмеричная и прочие системы в Java и преобразования между ними. # символы майя Для усвоения этого урока достаточно знать циклы for (while, do-while), оператор выбора switch, условный оператор **if **, знание и уверенное пользование арифметическим оператором modulo.
Это один из лучших примеров, который показывает, что первоначально абсолютно неподъёмная задача при решении оказывается не такой уж и страшной.
Мы уже рассматривали во главе, которая знакомила нас с while как из десятичных чисел получить двоичные.</description></item><item><title/><link>https://andron13.de/school/java/exercises/01-exercises-java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/01-exercises-java/</guid><description>Задачи Java Boolean введение - 01 # Задачи на усвоение булевых значений в Java. Достаточно знать тип данных boolean, желательно(рекомендуется) знать условный оператор if-else.
Родители Васи Сидорова купили умный сейф и запрограммировали его на выдачу денег по отпечатку пальцев одного из родителей. smartDepositBox(true, false) -&amp;gt; true smartDepositBox(false, true) -&amp;gt; true smartDepositBox(false, false) -&amp;gt; false После покупки сейфа в семье начался разлад по поводу выделению сыну денег и родители решили сейф перепрограммировать, таким образом, что бы он выдавал деньги только при обоюдном согласии родителей.</description></item><item><title/><link>https://andron13.de/school/java/exercises/02-exercises-java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/02-exercises-java/</guid><description>Закрепление пройденного материала - 02 # методы и классы в Java простые типы данных Switch Задачи # Даны два целых числа. Верните true, если одно из этих чисел находится в диапазоне от 10 до 20 включительно. Написать метод String getStringMonth(int month ),который принимает номер месяца, а возвращает название. В main распечатать результат работы метода. Учитывая int n, возвращайте true, если он находится в пределах 10 от 100 или 200.</description></item><item><title/><link>https://andron13.de/school/java/exercises/03-exercises-java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/03-exercises-java/</guid><description>Задачи для закрепления цикла for # Закрепление изученного # Дано целое трехзначное число. Написать метод, который возвращает число, записанное в обратном порядке, например: 123 -&amp;gt; 321 768 -&amp;gt; 867 Дано целое трехзначное число. Написать метод, который возвращает сумму разрядов этого числа, например: 123 -&amp;gt; 6 (1+2+3) 768 -&amp;gt; 21 (7+6+8) Дано целое трехзначное число. Написать метод, который определит четность/ нечетность разрядов этого числа, например: 123 -&amp;gt; 1 – нечет.</description></item><item><title/><link>https://andron13.de/school/java/exercises/04-exercises-java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/04-exercises-java/</guid><description>Задачи для повторения и закрепления материала # Первая партия задач # Давайте попробуем написать методы для вычисления площади и периметра фигур: квадрата, прямоугольника, треугольника, круга. И один раз напишем их исполняющими, а один раз возвратными. В обоих случаях методы должны принимать необходимые данные для вычисления: как радиус, длину сторон или прочее. Давайте напишем генератор паролей. Методу передаётся длина пароля. И метод генерирует пароль используя латиницу, цифры и некоторые спецсимволы(на ваш выбор).</description></item><item><title/><link>https://andron13.de/school/java/exercises/10-exercises-java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/10-exercises-java/</guid><description>Масивы # Заполните массив случайным числами и выведете максимальное, минимальное и среднее значение. Для генерации случайного числа используйте метод Math.random(), который возвращает значение в промежутке [0, 1]. Напишите программу, которая выводит на консоль простые числа в промежутке от [2, 100]. Используйте для решения этой задачи оператор &amp;ldquo;%&amp;rdquo; (остаток от деления) и циклы. Перевести String с именем и фамилией в массив Char. Внести все чётные цифры от нуля до 100 в массив int.</description></item><item><title/><link>https://andron13.de/school/java/exercises/java-introduction-exercises/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/java-introduction-exercises/</guid><description>Задачи к курсу &amp;ldquo;Основы Java&amp;rdquo; # Вполне возможно(точно), что не все задачи вы можете решите с Ява. Просто решите те, которые можете. Задания соотвествуют общей математической подготовке абитуриента и тем урокам, которые даны по курсу Java.
В день хорошо бы решать по одной задачe. Я не знаю с каким темпом и возможностями вы будете заниматься. Но лучше один час каждый день, чем 8 часов на выходных.
001 Привет мир # Выведите на экран свои имя, фамилию, рост, вес.</description></item><item><title/><link>https://andron13.de/school/java/exercises/temp-01-java-exercises/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/temp-01-java-exercises/</guid><description>Задачи на закрепление всех основных конструкций # The parameter weekday is true if it is a weekday, and the parameter vacation is true if we are on vacation. We sleep in if it is not a weekday or we&amp;rsquo;re on vacation. Return true if we sleep in. sleepIn(false, false) → true sleepIn(true, false) → false sleepIn(false, true) → true Given an int n, return the absolute difference between n and 21, except return double the absolute difference if n is over 21.</description></item><item><title/><link>https://andron13.de/school/java/exercises/temp-02-java-exercises-logic-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/temp-02-java-exercises-logic-01/</guid><description>Задачи на логику - уно # When squirrels get together for a party, they like to have cigars. A squirrel party is successful when the number of cigars is between 40 and 60, inclusive. Unless it is the weekend, in which case there is no upper bound on the number of cigars. Return true if the party with the given values is successful, or false otherwise. cigarParty(30, false) → false cigarParty(50, false) → true cigarParty(70, true) → true You are driving a little too fast, and a police officer stops you.</description></item><item><title/><link>https://andron13.de/school/java/exercises/temp-03-java-exercises-string-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/temp-03-java-exercises-string-01/</guid><description>Доброе утро, String - уно # Given a string name, e.g. &amp;ldquo;Bob&amp;rdquo;, return a greeting of the form &amp;ldquo;Hello Bob!&amp;rdquo;. helloName(&amp;quot;Bob&amp;quot;) → &amp;quot;Hello Bob!&amp;quot; helloName(&amp;quot;Alice&amp;quot;) → &amp;quot;Hello Alice!&amp;quot; helloName(&amp;quot;X&amp;quot;) → &amp;quot;Hello X!&amp;quot; Given an &amp;ldquo;out&amp;rdquo; string length 4, such as &amp;ldquo;&amp;laquo;&amp;raquo;&amp;rdquo;, and a word, return a new string where the word is in the middle of the out string, e.g. &amp;ldquo;&amp;laquo;word&amp;raquo;&amp;rdquo;. Note: use str.substring(i, j) to extract the String starting at index i and going up to but not including index j.</description></item><item><title/><link>https://andron13.de/school/java/exercises/temp-04-java-exercises-string-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/temp-04-java-exercises-string-02/</guid><description>Доброе день, String - дос # Given a string, return a string where for every char in the original, there are two chars. doubleChar(&amp;quot;The&amp;quot;) → &amp;quot;TThhee&amp;quot; doubleChar(&amp;quot;AAbb&amp;quot;) → &amp;quot;AAAAbbbb&amp;quot; doubleChar(&amp;quot;Hi-There&amp;quot;) → &amp;quot;HHii--TThheerree&amp;quot; Return the number of times that the string &amp;ldquo;code&amp;rdquo; appears anywhere in the given string, except we&amp;rsquo;ll accept any letter for the &amp;rsquo;d&amp;rsquo;, so &amp;ldquo;cope&amp;rdquo; and &amp;ldquo;cooe&amp;rdquo; count. countCode(&amp;quot;aaacodebbb&amp;quot;) → 1 countCode(&amp;quot;codexxcode&amp;quot;) → 2 countCode(&amp;quot;cozexxcope&amp;quot;) → 2 Return true if the given string contains a &amp;ldquo;bob&amp;rdquo; string, but where the middle &amp;lsquo;o&amp;rsquo; char can be any char.</description></item><item><title/><link>https://andron13.de/school/java/exercises/temp-05-java-exercises-string-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/temp-05-java-exercises-string-03/</guid><description>Добрый вечер, String - трес # Given a string, count the number of words ending in &amp;lsquo;y&amp;rsquo; or &amp;lsquo;z&amp;rsquo; &amp;ndash; so the &amp;lsquo;y&amp;rsquo; in &amp;ldquo;heavy&amp;rdquo; and the &amp;lsquo;z&amp;rsquo; in &amp;ldquo;fez&amp;rdquo; count, but not the &amp;lsquo;y&amp;rsquo; in &amp;ldquo;yellow&amp;rdquo; (not case sensitive). We&amp;rsquo;ll say that a y or z is at the end of a word if there is not an alphabetic letter immediately following it. (Note: Character.isLetter(char) tests if a char is an alphabetic letter.</description></item><item><title/><link>https://andron13.de/school/java/exercises/temp-06-java-exercises-logic-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/temp-06-java-exercises-logic-02/</guid><description>Задачи на логику - дос # We want to make a row of bricks that is goal inches long. We have a number of small bricks (1 inch each) and big bricks (5 inches each). Return true if it is possible to make the goal by choosing from the given bricks. This is a little harder than it looks and can be done without any loops. See also: Introduction to MakeBricks makeBricks(3, 1, 8) → true makeBricks(3, 1, 9) → false makeBricks(3, 2, 10) → true Given 3 int values, a b c, return their sum.</description></item><item><title/><link>https://andron13.de/school/java/exercises/temp-07-java-exercises-recursion-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/temp-07-java-exercises-recursion-01/</guid><description>Задачи для курса Java-basic - рекурсия # Given n of 1 or more, return the factorial of n, which is n * (n-1) * (n-2) &amp;hellip; 1. Compute the result recursively (without loops).
Дано N большее либо равное 1. Вернуть факториал N = n * (n-1) * (n-2) &amp;hellip;. 1. Вычислить результат рекурсивно (без циклов). factorial(1) → 1 factorial(2) → 2 factorial(3) → 6 We have bunnies standing in a line, numbered 1, 2, &amp;hellip; The odd bunnies (1, 3, .</description></item><item><title/><link>https://andron13.de/school/java/exercises/temp-08-java-exercises-loop-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/temp-08-java-exercises-loop-01/</guid><description>Задачи на циклы # Существует такая традиция: при приготовлении пельменей в один из них кладут монетку на счастье. Считается, что тому, кому попадется пельмень с монеткой, улыбнется удача.
Представим, что у нас есть кастрюля, в которой лежит 10 пельменей. Один из них счастливый — а именно пятый пельмень. Давайте напишем программу, которая ищет счастливый пельмень. Программа перебирает пельмени в кастрюле по одному, и когда доходит до пятого пельменя — напишет &amp;ldquo;Вот счастливый пельмень!</description></item><item><title/><link>https://andron13.de/school/java/exercises/temp-09-java-exercises-arrays-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/temp-09-java-exercises-arrays-01/</guid><description>Закрепление массивов, Java-Basic # Given an array of ints, return true if 6 appears as either the first or last element in the array. The array will be length 1 or more.
Дан массив int. Верните true, если цифра 6 является значением в первом или последнем элементе массива. Массив будет длиной больше, либо равной единице.
firstLast6([1, 2, 6]) → true firstLast6([6, 1, 2, 3]) → true firstLast6([13, 6, 1, 2, 3]) → false Given 2 arrays of ints, a and b, return true if they have the same first element or they have the same last element.</description></item><item><title/><link>https://andron13.de/school/java/exercises/temp-10-java-exercises-arrays-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/temp-10-java-exercises-arrays-02/</guid><description>Закрепление массивов, Java-Basic # Return the number of even ints in the given array. Note: the % &amp;ldquo;mod&amp;rdquo; operator computes the remainder, e.g. 5 % 2 is 1. countEvens([2, 1, 2, 3, 4]) → 3 countEvens([2, 2, 0]) → 3 countEvens([1, 3, 5]) → 0 Return the sum of the numbers in the array, returning 0 for an empty array. Except the number 13 is very unlucky, so it does not count and numbers that come immediately after a 13 also do not count.</description></item><item><title/><link>https://andron13.de/school/java/exercises/temp-11-java-exercises-arrays-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/temp-11-java-exercises-arrays-03/</guid><description>Закрепление массивов, Java-Basic # Consider the leftmost and righmost appearances of some value in an array. We&amp;rsquo;ll say that the &amp;ldquo;span&amp;rdquo; is the number of elements between the two inclusive. A single value has a span of 1. Returns the largest span found in the given array. (Efficiency is not a priority.) maxSpan([1, 2, 1, 1, 3]) → 4 maxSpan([1, 4, 2, 1, 4, 1, 4]) → 6 maxSpan([1, 4, 2, 1, 4, 4, 4]) → 6 Given a non-empty array, return true if there is a place to split the array so that the sum of the numbers on one side is equal to the sum of the numbers on the other side.</description></item><item><title/><link>https://andron13.de/school/java/exercises/temp-12-java-exercises-recursion-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/java/exercises/temp-12-java-exercises-recursion-02/</guid><description>Задачи для курса Java-basic - рекурсия # Given an array of ints, is it possible to choose a group of some of the ints, such that the group sums to the given target? This is a classic backtracking recursion problem. Once you understand the recursive backtracking strategy in this problem, you can use the same pattern for many problems to search a space of choices. Rather than looking at the whole array, our convention is to consider the part of the array starting at index start and continuing to the end of the array.</description></item><item><title/><link>https://andron13.de/school/tools/01-git/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/tools/01-git/</guid><description>Git # Не буду скрывать, Git это та технология, которая не так легко даётся.
Принципиально, написано достаточно книг, которые всё объясняют намного лучше, чем я когда либо смогу. Именно по этому я написал просто инструкцию для начинающих, где описаны основные приказы, которые тебе понадобятся первое время.
Единственное, что я бы хотел добавить к книгам, которые вам всё равно обязательно надо прочитать, всего несколько предложений.
Git - это система контроля версий в разработке.</description></item><item><title/><link>https://andron13.de/school/tools/02-github-basic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/tools/02-github-basic/</guid><description>Методичка по работе с Git # Терминология # Термин Ссылка Пояснение Git https://git-scm.com/downloads Git - это очень популярная технология контроля версий, используемая при разработке програмного обеспечения и веб-приложений. Онлайн инструкция на русском языке - https://git-scm.com/book/ru/v2/ Github https://github.com/ Популярный сервис для хранения Git-репозиториев. С 2018 года принадлежит Microsoft Bitbucket https://bitbucket.org/ Популярный сервис для хранения Git-репозиториев. Принадлежит Atlassian и очень тесно интегрирован с популярными IT-приложениями этой фирмы как Trello или Jira Gitlab https://gitlab.</description></item><item><title/><link>https://andron13.de/school/tools/03-booleanalgebra/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andron13.de/school/tools/03-booleanalgebra/</guid><description>Булева алгебра # Булева алгебра, ударение на первый слог. БУлева.
Принципиально основы булевой алгебры должны были давать в школе. Программисты учат её в институте. Люди, которые не учились в институте и не помнят, что было в школе 300 лет тому назад испытывают серьёзные затруднения в её осознании.
При этом всё не так уж и сложно, если у давали в школе.
Давайте я попробую на пальцах рассказать основы и то, что нам понадобится на минимальном уровне.</description></item></channel></rss>